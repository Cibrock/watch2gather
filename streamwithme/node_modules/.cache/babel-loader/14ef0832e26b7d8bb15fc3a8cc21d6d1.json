{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Viktor\\\\Documents\\\\Studium\\\\WuM\\\\Watch2Gether\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Viktor\\\\Documents\\\\Studium\\\\WuM\\\\Watch2Gether\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\Documents\\\\Studium\\\\WuM\\\\Watch2Gether\\\\streamwithme\\\\src\\\\components\\\\Video.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport \"./styles/Video.css\";\nimport { user } from '../App';\nimport { changeVideoUrl, getVideoUrl, changeVideoStatus, getVideoStatus, getVideoPosition, changeVideoPosition } from './API/VideoAPI';\nimport { roomName } from '../Room';\n\nvar Video = function Video(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _useState5 = useState(\"paused\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      status = _useState6[0],\n      setStatus = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isPlaying = _useState8[0],\n      setPlaying = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pos = _useState10[0],\n      setPos = _useState10[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    //Update the shown text whilst typing\n    setInput(event.target.value);\n    setPlaying(false);\n  };\n\n  var componentDidMount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var interval;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                var dataUrl, newUrl, dataStatus, newStatus, dataPos, newPos;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log(\"interval update\");\n\n                        if (!(roomName === \"\")) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", console.log(\"No Roomname set\"));\n\n                      case 3:\n                        _context.next = 5;\n                        return getVideoUrl(roomName);\n\n                      case 5:\n                        dataUrl = _context.sent;\n                        newUrl = dataUrl.url;\n                        if (newUrl !== url) setUrl(newUrl); //Sync status with API\n\n                        _context.next = 10;\n                        return getVideoStatus(roomName);\n\n                      case 10:\n                        dataStatus = _context.sent;\n                        newStatus = dataStatus.status;\n\n                        if (newStatus !== status) {\n                          if (newStatus === \"paused\") {\n                            setStatus(newStatus);\n                            setPlaying(false);\n                          } else if (newStatus === \"playing\") {\n                            setStatus(newStatus);\n                            setPlaying(true);\n                          }\n                        } // Sync position in video with API\n\n\n                        _context.next = 15;\n                        return getVideoPosition(roomName);\n\n                      case 15:\n                        dataPos = _context.sent;\n                        newPos = dataPos.position;\n\n                        if (newPos !== pos) {\n                          if (typeof newPos === \"number\" && Math.abs(newPos - pos) > 3) {\n                            setPos(newPos);\n\n                            _this.player.seekTo(newPos, 'seconds');\n                          }\n                        }\n\n                      case 18:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })), 3000);\n              return _context2.abrupt(\"return\", function () {\n                return clearInterval(interval);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function componentDidMount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var urlInput = function urlInput(event) {\n    //On Submit create the user and join a room if possible\n    if (user !== undefined) {\n      changeVideoUrl(roomName, user, input);\n      setUrl(input);\n      setInput(\"\");\n    } else console.log(user);\n\n    event.preventDefault();\n  };\n\n  var ref = function ref(player) {\n    _this.player = player;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: urlInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Url\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Video URL eingeben\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Url\",\n    id: \"Url\",\n    placeholder: \"z.B: https://youtu.be/dQw4w9WgXcQ\",\n    value: input,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"presentation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    height: \"9em\",\n    width: \"18em\",\n    poster: input,\n    url: input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"submitVideo\",\n    value: \"Video Teilen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    height: \"20em\",\n    width: \"35em\",\n    border: \"bold\",\n    controls: true,\n    playing: isPlaying,\n    url: url,\n    onReady: function onReady() {\n      return console.log('onReady callback');\n    },\n    onStart: function onStart() {\n      return changeVideoStatus(roomName, user, 'playing');\n    },\n    onPause: function onPause() {\n      return changeVideoStatus(roomName, user, 'paused');\n    },\n    onEnded: function onEnded() {\n      return console.log('onEnd callback');\n    },\n    onError: function onError() {\n      return console.log('onError callback');\n    },\n    onProgress: function onProgress(data) {\n      return changeVideoPosition(roomName, user, Math.round(data.playedSeconds));\n    },\n    progressInterval: 3000,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })));\n}; // class Video extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { input: \"\", url: \"\", status: \"paused\", isPlaying: false, pos: 0 };\n//         this.handleInputChange = this.handleInputChange.bind(this);\n//         this.UrlInput = this.UrlInput.bind(this);\n//     }\n//     handleInputChange(event) {\n//         //Update the shown text whilst typing\n//         this.setState({ input: event.target.value, playing: false });\n//     }\n//     async componentDidMount() {\n//         const interval = setInterval(async () => {\n//             if (roomName === \"\") return;\n//             //Sync url with API\n//             let dataUrl = await getVideoUrl(roomName);\n//             let url = dataUrl.url;\n//             if (url !== this.state.url) this.setState({ url: url });\n//             //Sync status with API\n//             let dataStatus = await getVideoStatus(roomName);\n//             let status = dataStatus.status;\n//             if (status !== this.state.status) {\n//                 if (status === \"paused\")\n//                     this.setState({ status: status, isPlaying: false });\n//                 else if (status === \"playing\")\n//                     this.setState({ status: status, isPlaying: true });\n//             }\n//             // Sync position in video with API\n//             let dataPos = await getVideoPosition(roomName);\n//             let pos = dataPos.position;\n//             if (pos !== this.state.pos) {\n//                 // // if ((typeof(pos)===\"number\") && (Math.abs(pos - this.state.pos) > 3)) {\n//                 //     this.setState({ pos: pos })\n//                 //     this.player.seekTo(pos, 'seconds');\n//             }\n//         }, 3000);\n//         return () => clearInterval(interval);\n//     }\n//     async UrlInput(event) {\n//         //On Submit create the user and join a room if possible\n//         if (user !== undefined) {\n//             changeVideoUrl(roomName, user, this.state.input);\n//             this.setState({ input: \"\", url: this.state.input });\n//         }\n//         event.preventDefault();\n//     }\n//     ref = player => {\n//         this.player = player;\n//     };\n//     render() {\n//         return (\n//             <div className=\"video-container\">\n//                 <div className=\"video-input\">\n//                     <form onSubmit={this.UrlInput}>\n//                         <label htmlFor=\"Url\">\n//                             Video URL eingeben\n//                             <input\n//                                 type='text'\n//                                 name=\"Url\"\n//                                 id=\"Url\"\n//                                 placeholder=\"z.B: https://youtu.be/dQw4w9WgXcQ\"\n//                                 value={this.state.input}\n//                                 onChange={this.handleInputChange}\n//                             />\n//                         </label>\n//                         <div role='presentation'>\n//                             <ReactPlayer\n//                                 height='9em'\n//                                 width='18em'\n//                                 poster={this.state.input}\n//                                 url={this.state.input}\n//                             />\n//                         </div>\n//                         <input type=\"submit\" className=\"submitVideo\" value=\"Video Teilen\" />\n//                     </form>\n//                 </div>\n//                 <div className=\"video\">\n//                     <ReactPlayer\n//                         height='20em'\n//                         width='35em'\n//                         border='bold'\n//                         controls\n//                         playing={this.state.isPlaying}\n//                         url={this.state.url}\n//                         onReady={() => console.log('onReady callback')}\n//                         onStart={() => changeVideoStatus(roomName, user, 'playing')}\n//                         onPause={() => changeVideoStatus(roomName, user, 'paused')}\n//                         onEnded={() => console.log('onEnd callback')}\n//                         onError={() => console.log('onError callback')}\n//                         onProgress={(data) => changeVideoPosition(roomName, user, Math.round(data.playedSeconds))}\n//                         progressInterval={3000}\n//                     />\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n\nexport default Video;","map":{"version":3,"names":["React","useState","ReactPlayer","user","changeVideoUrl","getVideoUrl","changeVideoStatus","getVideoStatus","getVideoPosition","changeVideoPosition","roomName","Video","props","input","setInput","url","setUrl","status","setStatus","isPlaying","setPlaying","pos","setPos","handleInputChange","event","target","value","componentDidMount","interval","setInterval","console","log","dataUrl","newUrl","dataStatus","newStatus","dataPos","newPos","position","Math","abs","player","seekTo","clearInterval","urlInput","undefined","preventDefault","ref","data","round","playedSeconds"],"sources":["C:/Users/Viktor/Documents/Studium/WuM/Watch2Gether/streamwithme/src/components/Video.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport \"./styles/Video.css\";\r\nimport { user } from '../App';\r\nimport { changeVideoUrl, getVideoUrl, changeVideoStatus, getVideoStatus, getVideoPosition, changeVideoPosition } from './API/VideoAPI';\r\nimport { roomName } from '../Room';\r\n\r\nconst Video = (props) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [status, setStatus] = useState(\"paused\");\r\n    const [isPlaying, setPlaying] = useState(false);\r\n    const [pos, setPos] = useState(0);\r\n\r\n    const handleInputChange = (event) => {\r\n        //Update the shown text whilst typing\r\n        setInput(event.target.value);\r\n        setPlaying(false);\r\n    };\r\n\r\n    const componentDidMount = async () => {\r\n        const interval = setInterval(async () => {\r\n            console.log(\"interval update\");\r\n            if (roomName === \"\") return console.log(\"No Roomname set\");\r\n            //Sync url with API\r\n            let dataUrl = await getVideoUrl(roomName);\r\n            let newUrl = dataUrl.url;\r\n            if (newUrl !== url) setUrl(newUrl);\r\n            //Sync status with API\r\n            let dataStatus = await getVideoStatus(roomName);\r\n            let newStatus = dataStatus.status;\r\n            if (newStatus !== status) {\r\n                if (newStatus === \"paused\"){\r\n                    setStatus(newStatus);\r\n                    setPlaying(false)\r\n                }else if (newStatus === \"playing\") {\r\n                    setStatus(newStatus);\r\n                    setPlaying(true);\r\n                }\r\n\r\n            }\r\n            // Sync position in video with API\r\n            let dataPos = await getVideoPosition(roomName);\r\n            let newPos = dataPos.position;\r\n            if (newPos !== pos) {\r\n                if ((typeof(newPos)===\"number\") && (Math.abs(newPos - pos) > 3)) {\r\n                    setPos(newPos);\r\n                    this.player.seekTo(newPos, 'seconds');\r\n                }\r\n            }\r\n\r\n        }, 3000);\r\n        return () => clearInterval(interval);\r\n    };\r\n\r\n    const urlInput = (event) => {\r\n        //On Submit create the user and join a room if possible\r\n        if (user !== undefined) {\r\n            changeVideoUrl(roomName, user, input);\r\n            setUrl(input);\r\n            setInput(\"\");\r\n        } else console.log(user);\r\n        event.preventDefault();\r\n    };\r\n\r\n    const ref = (player) => {\r\n        this.player = player;\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-container\">\r\n            <div className=\"video-input\">\r\n                <form onSubmit={urlInput}>\r\n                    <label htmlFor=\"Url\">\r\n                        Video URL eingeben\r\n                        <input\r\n                            type='text'\r\n                            name=\"Url\"\r\n                            id=\"Url\"\r\n                            placeholder=\"z.B: https://youtu.be/dQw4w9WgXcQ\"\r\n                            value={input}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </label>\r\n                    <div role='presentation'>\r\n                        <ReactPlayer\r\n                            height='9em'\r\n                            width='18em'\r\n                            poster={input}\r\n                            url={input}\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"submitVideo\" value=\"Video Teilen\" />\r\n                </form>\r\n            </div>\r\n            <div className=\"video\">\r\n                <ReactPlayer\r\n                    height='20em'\r\n                    width='35em'\r\n                    border='bold'\r\n                    controls\r\n                    playing={isPlaying}\r\n                    url={url}\r\n                    onReady={() => console.log('onReady callback')}\r\n                    onStart={() => changeVideoStatus(roomName, user, 'playing')}\r\n                    onPause={() => changeVideoStatus(roomName, user, 'paused')}\r\n                    onEnded={() => console.log('onEnd callback')}\r\n                    onError={() => console.log('onError callback')}\r\n                    onProgress={(data) => changeVideoPosition(roomName, user, Math.round(data.playedSeconds))}\r\n                    progressInterval={3000}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// class Video extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { input: \"\", url: \"\", status: \"paused\", isPlaying: false, pos: 0 };\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//         this.UrlInput = this.UrlInput.bind(this);\r\n//     }\r\n//     handleInputChange(event) {\r\n//         //Update the shown text whilst typing\r\n//         this.setState({ input: event.target.value, playing: false });\r\n//     }\r\n//     async componentDidMount() {\r\n//         const interval = setInterval(async () => {\r\n//             if (roomName === \"\") return;\r\n//             //Sync url with API\r\n//             let dataUrl = await getVideoUrl(roomName);\r\n//             let url = dataUrl.url;\r\n//             if (url !== this.state.url) this.setState({ url: url });\r\n//             //Sync status with API\r\n//             let dataStatus = await getVideoStatus(roomName);\r\n//             let status = dataStatus.status;\r\n//             if (status !== this.state.status) {\r\n//                 if (status === \"paused\")\r\n//                     this.setState({ status: status, isPlaying: false });\r\n//                 else if (status === \"playing\")\r\n//                     this.setState({ status: status, isPlaying: true });\r\n\r\n//             }\r\n//             // Sync position in video with API\r\n//             let dataPos = await getVideoPosition(roomName);\r\n//             let pos = dataPos.position;\r\n//             if (pos !== this.state.pos) {\r\n//                 // // if ((typeof(pos)===\"number\") && (Math.abs(pos - this.state.pos) > 3)) {\r\n//                 //     this.setState({ pos: pos })\r\n//                 //     this.player.seekTo(pos, 'seconds');\r\n//             }\r\n\r\n//         }, 3000);\r\n//         return () => clearInterval(interval);\r\n//     }\r\n\r\n//     async UrlInput(event) {\r\n//         //On Submit create the user and join a room if possible\r\n//         if (user !== undefined) {\r\n//             changeVideoUrl(roomName, user, this.state.input);\r\n//             this.setState({ input: \"\", url: this.state.input });\r\n//         }\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     ref = player => {\r\n//         this.player = player;\r\n//     };\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"video-container\">\r\n//                 <div className=\"video-input\">\r\n//                     <form onSubmit={this.UrlInput}>\r\n//                         <label htmlFor=\"Url\">\r\n//                             Video URL eingeben\r\n//                             <input\r\n//                                 type='text'\r\n//                                 name=\"Url\"\r\n//                                 id=\"Url\"\r\n//                                 placeholder=\"z.B: https://youtu.be/dQw4w9WgXcQ\"\r\n//                                 value={this.state.input}\r\n//                                 onChange={this.handleInputChange}\r\n//                             />\r\n//                         </label>\r\n//                         <div role='presentation'>\r\n//                             <ReactPlayer\r\n//                                 height='9em'\r\n//                                 width='18em'\r\n//                                 poster={this.state.input}\r\n//                                 url={this.state.input}\r\n//                             />\r\n//                         </div>\r\n//                         <input type=\"submit\" className=\"submitVideo\" value=\"Video Teilen\" />\r\n//                     </form>\r\n//                 </div>\r\n//                 <div className=\"video\">\r\n//                     <ReactPlayer\r\n//                         height='20em'\r\n//                         width='35em'\r\n//                         border='bold'\r\n//                         controls\r\n//                         playing={this.state.isPlaying}\r\n//                         url={this.state.url}\r\n//                         onReady={() => console.log('onReady callback')}\r\n//                         onStart={() => changeVideoStatus(roomName, user, 'playing')}\r\n//                         onPause={() => changeVideoStatus(roomName, user, 'paused')}\r\n//                         onEnded={() => console.log('onEnd callback')}\r\n//                         onError={() => console.log('onError callback')}\r\n//                         onProgress={(data) => changeVideoPosition(roomName, user, Math.round(data.playedSeconds))}\r\n//                         progressInterval={3000}\r\n//                     />\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\nexport default Video;"],"mappings":"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AjB,CAAvB;IAAA,CARb;IASI,OAAO,EAAE;MAAA,OAAMG,iBAAiB,CAACI,QAAD,EAAWP,IAAX,EAAiB,QAAjB,CAAvB;IAAA,CATb;IAUI,OAAO,EAAE;MAAA,OAAM2B,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;IAAA,CAVb;IAWI,OAAO,EAAE;MAAA,OAAMD,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;IAAA,CAXb;IAYI,UAAU,EAAE,oBAACiB,IAAD;MAAA,OAAUvC,mBAAmB,CAACC,QAAD,EAAWP,IAAX,EAAiBoC,IAAI,CAACU,KAAL,CAAWD,IAAI,CAACE,aAAhB,CAAjB,CAA7B;IAAA,CAZhB;IAaI,gBAAgB,EAAE,IAbtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAzBJ,CADJ;AA6CH,CA3GD,C,CA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAevC,KAAf"},"metadata":{},"sourceType":"module"}