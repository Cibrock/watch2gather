{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Hochschule Anhalt\\\\WuB\\\\streamwithme\\\\src\\\\components\\\\PostUser.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React from \"react\";\nimport { createUser } from \"./UserController\";\nimport Room, { roomName } from \"../Room\";\nimport { getRoomUsers, joinRoom } from \"./RoomController\";\nimport { user } from \"../App\";\n\nvar PostUser = /*#__PURE__*/function (_React$Component) {\n  _inherits(PostUser, _React$Component);\n\n  function PostUser(props) {\n    var _this;\n\n    _classCallCheck(this, PostUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostUser).call(this, props));\n    _this.state = {\n      name: \"\",\n      trigger: props.trigger == undefined ? false : props.trigger\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.UserInput = _this.UserInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostUser, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      //Update the shown text whilst typing\n      this.setState({\n        name: event.target.value\n      });\n    }\n  }, {\n    key: \"UserInput\",\n    value: function () {\n      var _UserInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //On Submit create the user and join a room if possible\n                createUser(this.state.name);\n\n                if (roomName != \"Test\") {\n                  joinRoom(roomName, user);\n                  Room.call(customForceUpdate);\n                } //Set Trigger false, make this invisible\n\n\n                this.setState({\n                  name: \"\",\n                  trigger: \"false\"\n                });\n                event.preventDefault();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UserInput(_x) {\n        return _UserInput.apply(this, arguments);\n      }\n\n      return UserInput;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.trigger ? /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.UserInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n        name: \"UserName\",\n        type: \"name\",\n        value: this.state.name,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }))) : null;\n    }\n  }]);\n\n  return PostUser;\n}(React.Component);\n\nexport default PostUser;","map":{"version":3,"names":["React","createUser","Room","roomName","getRoomUsers","joinRoom","user","PostUser","props","state","name","trigger","undefined","handleInputChange","bind","UserInput","event","setState","target","value","call","customForceUpdate","preventDefault","Component"],"sources":["D:/Hochschule Anhalt/WuB/streamwithme/src/components/PostUser.js"],"sourcesContent":["import React from \"react\";\nimport { createUser } from \"./UserController\";\nimport Room, { roomName } from \"../Room\"\nimport { getRoomUsers, joinRoom } from \"./RoomController\";\nimport { user } from \"../App\";\n\nclass PostUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", trigger: (props.trigger == undefined) ? false : props.trigger};\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.UserInput = this.UserInput.bind(this);\n  }\n  handleInputChange(event) {\n    //Update the shown text whilst typing\n    this.setState({ name: event.target.value });\n  }\n\n  async UserInput(event) {\n    //On Submit create the user and join a room if possible\n    createUser(this.state.name);\n    if(roomName!=\"Test\"){\n      joinRoom(roomName,user)\n      Room.call(customForceUpdate)\n    }\n    //Set Trigger false, make this invisible\n    this.setState({ name: \"\", trigger: \"false\" });\n    event.preventDefault();\n    \n  }\n\n  render() {\n    return (this.state.trigger) ? (\n      <form onSubmit={this.UserInput}>\n        <label>\n          Name\n          <input\n            name=\"UserName\" type=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange} />\n          <input type=\"submit\" value=\"Submit\" />\n        </label>\n      </form>\n    ) : null;\n  }\n}\nexport default PostUser"],"mappings":";;;;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,SAA/B;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,kBAAvC;AACA,SAASC,IAAT,QAAqB,QAArB;;IAEMC,Q;;;EACJ,kBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,8EAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MAAEC,IAAI,EAAE,EAAR;MAAYC,OAAO,EAAGH,KAAK,CAACG,OAAN,IAAiBC,SAAlB,GAA+B,KAA/B,GAAuCJ,KAAK,CAACG;IAAlE,CAAb;IACA,MAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;IACA,MAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;IAJiB;EAKlB;;;;sCACiBE,K,EAAO;MACvB;MACA,KAAKC,QAAL,CAAc;QAAEP,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaC;MAArB,CAAd;IACD;;;;mGAEeH,K;;;;;gBACd;gBACAf,UAAU,CAAC,KAAKQ,KAAL,CAAWC,IAAZ,CAAV;;gBACA,IAAGP,QAAQ,IAAE,MAAb,EAAoB;kBAClBE,QAAQ,CAACF,QAAD,EAAUG,IAAV,CAAR;kBACAJ,IAAI,CAACkB,IAAL,CAAUC,iBAAV;gBACD,C,CACD;;;gBACA,KAAKJ,QAAL,CAAc;kBAAEP,IAAI,EAAE,EAAR;kBAAYC,OAAO,EAAE;gBAArB,CAAd;gBACAK,KAAK,CAACM,cAAN;;;;;;;;;;;;;;;;;;6BAIO;MACP,OAAQ,KAAKb,KAAL,CAAWE,OAAZ,gBACL;QAAM,QAAQ,EAAE,KAAKI,SAArB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,wBAEE;QACE,IAAI,EAAC,UADP;QACkB,IAAI,EAAC,MADvB;QAEE,KAAK,EAAE,KAAKN,KAAL,CAAWC,IAFpB;QAGE,QAAQ,EAAE,KAAKG,iBAHjB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,eAME;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC,QAA3B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EANF,CADF,CADK,GAWH,IAXJ;IAYD;;;;EAtCoBb,KAAK,CAACuB,S;;AAwC7B,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}