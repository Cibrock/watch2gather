{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Viktor\\\\Documents\\\\Studium\\\\WuM\\\\Watch2Gether\\\\streamwithme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\Documents\\\\Studium\\\\WuM\\\\Watch2Gether\\\\streamwithme\\\\src\\\\NotFound.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport { getRooms } from \"./components/API/RoomAPI\";\n\nvar NotFound = function NotFound() {\n  var navigate = useNavigate();\n  var navigateToRoom = useCallback(function () {\n    return navigate(\"/Room\", {\n      replace: true\n    });\n  }, [navigate]);\n  var TITLE = \"Not Found\";\n  var location = useLocation();\n  var path = location.pathname.substring(1);\n  useEffect(function () {\n    checkRoom();\n  });\n\n  var checkRoom = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var data, rooms, target;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getRooms();\n\n            case 2:\n              data = _context.sent;\n              rooms = data.rooms;\n\n              if (!(rooms === undefined)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              target = rooms.find(function (room) {\n                return room.name == path;\n              });\n\n              if (!(target === undefined)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              roomState.set(path);\n              titleState.set(path);\n\n              if (userState.get() === false) {\n                popupState.set(true);\n                console.log(\"Blocked join room, user is not set\");\n              } else {\n                joinRoom(roomName, userState.get());\n                navigateToRoom();\n              }\n\n              console.log();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkRoom() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, TITLE)), /*#__PURE__*/React.createElement(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Dieser Raum \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 30\n    }\n  }, path), \" existiert nicht mehr.\"), /*#__PURE__*/React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputUser, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NotFound;","map":{"version":3,"names":["React","useCallback","useEffect","useNavigate","Helmet","useLocation","Footer","Navbar","getRooms","NotFound","navigate","navigateToRoom","replace","TITLE","location","path","pathname","substring","checkRoom","data","rooms","undefined","target","find","room","name","roomState","set","titleState","userState","get","popupState","console","log","joinRoom","roomName"],"sources":["C:/Users/Viktor/Documents/Studium/WuM/Watch2Gether/streamwithme/src/NotFound.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { getRooms } from \"./components/API/RoomAPI\";\r\n\r\nconst NotFound = () => {\r\n    const navigate = useNavigate();\r\n    const navigateToRoom = useCallback(() => navigate(\"/Room\", { replace: true }), [navigate]);\r\n\r\n    const TITLE = \"Not Found\"\r\n    const location = useLocation();\r\n    const path = location.pathname.substring(1)\r\n\r\n    useEffect(()=>{checkRoom()})\r\n\r\n    const checkRoom = async () => {\r\n        const data = await getRooms();\r\n        const rooms = data.rooms;\r\n        if (rooms === undefined) return;\r\n        const target = rooms.find((room)=>{return room.name==path});\r\n        if (target===undefined) return;\r\n\r\n        roomState.set(path);\r\n        titleState.set(path);\r\n        if (userState.get() === false) {\r\n            popupState.set(true);\r\n            console.log(\"Blocked join room, user is not set\");\r\n        } else {\r\n            joinRoom(roomName, userState.get());                \r\n            navigateToRoom();\r\n        }\r\n        console.log();\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <Helmet>\r\n                <title>{TITLE}</title>\r\n            </Helmet>\r\n            <Navbar />\r\n            <div>Dieser Raum <code>{path}</code> existiert nicht mehr.</div>\r\n            <Footer />\r\n            <InputUser />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;"],"mappings":";;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACnB,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,IAAMQ,cAAc,GAAGV,WAAW,CAAC;IAAA,OAAMS,QAAQ,CAAC,OAAD,EAAU;MAAEE,OAAO,EAAE;IAAX,CAAV,CAAd;EAAA,CAAD,EAA6C,CAACF,QAAD,CAA7C,CAAlC;EAEA,IAAMG,KAAK,GAAG,WAAd;EACA,IAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,IAAMU,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,SAAlB,CAA4B,CAA5B,CAAb;EAEAf,SAAS,CAAC,YAAI;IAACgB,SAAS;EAAG,CAAlB,CAAT;;EAEA,IAAMA,SAAS;IAAA,sEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACKV,QAAQ,EADb;;YAAA;cACRW,IADQ;cAERC,KAFQ,GAEAD,IAAI,CAACC,KAFL;;cAAA,MAGVA,KAAK,KAAKC,SAHA;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAIRC,MAJQ,GAICF,KAAK,CAACG,IAAN,CAAW,UAACC,IAAD,EAAQ;gBAAC,OAAOA,IAAI,CAACC,IAAL,IAAWV,IAAlB;cAAuB,CAA3C,CAJD;;cAAA,MAKVO,MAAM,KAAGD,SALC;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAOdK,SAAS,CAACC,GAAV,CAAcZ,IAAd;cACAa,UAAU,CAACD,GAAX,CAAeZ,IAAf;;cACA,IAAIc,SAAS,CAACC,GAAV,OAAoB,KAAxB,EAA+B;gBAC3BC,UAAU,CAACJ,GAAX,CAAe,IAAf;gBACAK,OAAO,CAACC,GAAR,CAAY,oCAAZ;cACH,CAHD,MAGO;gBACHC,QAAQ,CAACC,QAAD,EAAWN,SAAS,CAACC,GAAV,EAAX,CAAR;gBACAnB,cAAc;cACjB;;cACDqB,OAAO,CAACC,GAAR;;YAhBc;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAATf,SAAS;MAAA;IAAA;EAAA,GAAf;;EAqBA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQL,KAAR,CADJ,CADJ,eAII,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,eAKI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gCAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOE,IAAP,CAAjB,2BALJ,eAMI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANJ,eAOI,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,CADJ;AAWH,CA1CD;;AA4CA,eAAeN,QAAf"},"metadata":{},"sourceType":"module"}