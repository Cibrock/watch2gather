{"version":3,"sources":["components/API/VideoAPI.js","components/EventHandler.js","components/Video.js","components/API/UserAPI.js","components/Footer.js","components/API/ChatAPI.js","components/ChatMessage.js","components/ChatInput.js","components/Chat.js","components/UserList.js","components/VideoInput.js","components/Help.js","Room.js","components/API/RoomAPI.js","components/Navbar.js","components/InputUser.js","components/CreateRoom.js","components/Backgroundvideo.js","components/RoomListElement.js","components/RoomList.js","App.js","NotFound.js","index.js","components/Assets/bgvid.860475ab.mp4"],"names":["getVideoStatus","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","roomName","res","wrap","_context","prev","next","fetch","method","sent","json","abrupt","t0","console","log","stop","_x","apply","this","arguments","changeVideoStatus","_ref2","_callee2","id","status","_context2","headers","Content-Type","body","JSON","stringify","user","error","_x2","_x3","_x4","changeVideoUrl","_ref3","_callee3","url","_context3","_x5","_x6","_x7","getVideoUrl","_ref4","_callee4","_context4","_x8","changeVideoPosition","_ref5","_callee5","position","_context5","_x9","_x10","_x11","getVideoPosition","_ref6","_callee6","_context6","_x12","eventState","hookstate","eventType","UserLeave","color","message","UserJoin","NewMessage","VideoPaused","VideoUnpaused","VideoFFW","VideoREW","VideoError","VideoEnded","NewVideo","LinkCopied","Empty","EventHandler","event","useHookstate","useEffect","timeout","setTimeout","set","clearTimeout","react_default","a","createElement","className","get","aria-live","Video","_useState","useState","_useState2","slicedToArray","setUrl","_useState3","_useState4","setStatus","_useState5","_useState6","isPlaying","setPlaying","_useState7","_useState8","pos","setPos","matchesWidth","useMediaQuery","matchesHeight","playerRef","useRef","roomState","userState","interval","setInterval","Video_regeneratorRuntime","videoUrl","videoStatus","videoPosition","clearInterval","dataUrl","newUrl","dataStatus","newStatus","dataPos","newPos","Math","abs","current","seekTo","setupVideo","lib_default","height","width","border","controls","muted","playing","ref","progressInterval","onReady","onStart","onPlay","onPause","onProgress","data","playedSeconds","onSeek","onEnded","onError","createUser","UserAPI_regeneratorRuntime","_name","name","deleteUser","getUsers","userId","Footer","sendMessage","ChatAPI_regeneratorRuntime","getChat","ChatMessage","React","forwardRef","props","text","propTime","time","setTime","undefined","date","Date","setMilliseconds","toISOString","substring","role","ChatInput","newMessage","setNewMessage","submitInput","ChatInput_regeneratorRuntime","preventDefault","onSubmit","htmlFor","type","value","placeholder","maxLength","autoComplete","minLength","onChange","target","Chat","displayed","setDisplayed","endRef","lastCount","setLastCount","scrollToBottom","scrollIntoView","behavior","length","Chat_regeneratorRuntime","shownMessages","messages","data2","list","users","forEach","find","element","Fragment","aria-label","onFocus","map","m","components_ChatMessage","key","components_ChatInput","UserListElement","UserList","UserList_regeneratorRuntime","shownUsers","getRoomUsers","UserList_UserListElement","VideoInput","input","setInput","popupHelpStatus","Help","toggle","react_modal_lib_default","overlayClassName","isOpen","onRequestClose","shouldFocusAfterRender","shouldCloseOnOverlayClick","shouldCloseOnEsc","shouldReturnFocusAfterClose","preventScroll","contentLabel","onClick","Room","navigate","useNavigate","navigateToHome","useCallback","replace","handleTabClose","leaveRoom","returnValue","window","addEventListener","removeEventListener","index_module","components_Navbar","components_UserList","components_Chat","components_VideoInput","components_Video","components_Footer","components_EventHandler","components_Help","createRoom","RoomAPI_regeneratorRuntime","joinRoom","roomTitleState","getRooms","Navbar","room","title","setTitle","roomTitle","checkTitle","Navbar_regeneratorRuntime","u","handleKeyDown","e","handleNavigate","toggleHelp","tabIndex","onKeyDown","navigator","clipboard","writeText","popupInputState","ReactModal","setAppElement","InputUser","navigateToRoom","setName","InputUser_regeneratorRuntime","CreateRoom","instantiateRoom","CreateRoom_regeneratorRuntime","Backgroundvideo","autoPlay","loop","src","video","RoomListElement","viewers","setViewers","getViewers","RoomListElement_regeneratorRuntime","enterRoom","RoomList","RoomList_regeneratorRuntime","shownRooms","rooms","components_RoomListElement","App","path","useLocation","pathname","navigateToNotFound","checkRoom","App_regeneratorRuntime","Helmet","components_InputUser","components_CreateRoom","components_RoomList","components_Backgroundvideo","NotFound","ReactDOM","createRoot","document","getElementById","render","react_router_dom","base","react_router","src_App","src_Room","src_NotFound","module","exports","__webpack_require__","p"],"mappings":"shNAGO,IAAMA,EAAc,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,MAAM,yCAAyCN,EAAS,UACpE,CACIO,OAAQ,QAJM,cAElBN,EAFkBE,EAAAK,KAAAL,EAAAE,KAAA,EAOTJ,EAAIQ,OAPK,cAAAN,EAAAO,OAAA,SAAAP,EAAAK,MAAA,OAAAL,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAUtBS,QAAQC,IAARV,EAAAQ,IAVsB,yBAAAR,EAAAW,SAAAf,EAAA,iBAAH,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GAadC,EAAiB,eAAAC,EAAAzB,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAAuB,EAAOrB,EAAUsB,EAAIC,GAArB,OAAA1B,IAAAK,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OAC7B,IACIC,MAAM,yCAAyCN,EAAS,UACpD,CACIO,OAAQ,MACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAQR,EACRC,OAAUA,MAM1B,MAAOQ,GACHnB,QAAQC,IAAIkB,GAjBa,wBAAAP,EAAAV,SAAAO,MAAH,gBAAAW,EAAAC,EAAAC,GAAA,OAAAd,EAAAJ,MAAAC,KAAAC,YAAA,GAoBjBiB,EAAc,eAAAC,EAAAzC,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAAuC,EAAOrC,EAAUsB,EAAIgB,GAArB,OAAAzC,IAAAK,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAC1B,IACIC,MAAM,yCAAyCN,EAAS,SACpD,CACIO,OAAQ,MACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAQR,EACRgB,IAAQA,MAKxB,MAAOP,GACHnB,QAAQC,IAAIkB,GAhBU,wBAAAQ,EAAAzB,SAAAuB,MAAH,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAApB,MAAAC,KAAAC,YAAA,GAmBdyB,EAAW,eAAAC,EAAAjD,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAA+C,EAAO7C,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAA1C,KAAA,EAAA0C,EAAAzC,KAAA,EAEHC,MAAM,yCAAyCN,EAAS,SACpE,CACIO,OAAQ,QAJG,cAEfN,EAFe6C,EAAAtC,KAAAsC,EAAAzC,KAAA,EAONJ,EAAIQ,OAPE,cAAAqC,EAAApC,OAAA,SAAAoC,EAAAtC,MAAA,OAAAsC,EAAA1C,KAAA,EAAA0C,EAAAnC,GAAAmC,EAAA,SAUnBlC,QAAQC,IAARiC,EAAAnC,IAVmB,yBAAAmC,EAAAhC,SAAA+B,EAAA,iBAAH,gBAAAE,GAAA,OAAAH,EAAA5B,MAAAC,KAAAC,YAAA,GAaX8B,EAAmB,eAAAC,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAAoD,EAAOlD,EAAUsB,EAAI6B,GAArB,OAAAtD,IAAAK,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,OAC/B,IACIC,MAAM,yCAAyCN,EAAS,YACpD,CACIO,OAAQ,MACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAQR,EACR6B,SAAaA,MAK7B,MAAOpB,GACHnB,QAAQC,IAAIkB,GAhBe,wBAAAqB,EAAAtC,SAAAoC,MAAH,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAjC,MAAAC,KAAAC,YAAA,GAmBnBsC,EAAgB,eAAAC,EAAA9D,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAA4D,EAAO1D,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAERC,MAAM,yCAAyCN,EAAS,YACpE,CACIO,OAAQ,QAJQ,cAEpBN,EAFoB0D,EAAAnD,KAAAmD,EAAAtD,KAAA,EAOXJ,EAAIQ,OAPO,cAAAkD,EAAAjD,OAAA,SAAAiD,EAAAnD,MAAA,OAAAmD,EAAAvD,KAAA,EAAAuD,EAAAhD,GAAAgD,EAAA,SAUxB/C,QAAQC,IAAR8C,EAAAhD,IAVwB,yBAAAgD,EAAA7C,SAAA4C,EAAA,iBAAH,gBAAAE,GAAA,OAAAH,EAAAzC,MAAAC,KAAAC,YAAA,GC9EhB2C,SAAaC,YAAU,UAE9BC,EAAY,CACdC,UAAgB,CAACC,MAAM,aAAaC,QAAQ,mCAC5CC,SAAgB,CAACF,MAAM,aAAaC,QAAQ,qCAC5CE,WAAgB,CAACH,MAAM,aAAaC,QAAQ,uBAC5CG,YAAgB,CAACJ,MAAM,aAAaC,QAAQ,4BAC5CI,cAAgB,CAACL,MAAM,aAAaC,QAAQ,+BAC5CK,SAAgB,CAACN,MAAM,aAAaC,QAAQ,8BAC5CM,SAAgB,CAACP,MAAM,aAAaC,QAAQ,oCAE5CO,WAAgB,CAACR,MAAM,YAAYC,QAAQ,+CAE3CQ,WAAgB,CAACT,MAAM,cAAcC,QAAQ,wBAC7CS,SAAgB,CAACV,MAAM,cAAcC,QAAQ,eAC7CU,WAAgB,CAACX,MAAM,cAAcC,QAAQ,yCAC7CW,MAAgB,CAACZ,MAAM,GAAGC,QAAQ,KAkBvBY,EAfM,WACjB,IAAMC,EAAQC,YAAanB,GAO3B,OALAoB,oBAAU,WACN,IAAMC,EAAUC,WAAW,WAAQJ,EAAMK,IAAI,UAAY,KACzD,OAAO,kBAAMC,aAAaH,MAI1BI,EAAAC,EAAAC,cAAA,OAAKC,UAA2B,UAAdV,EAAMW,MAAkB,oBAAsB3B,EAAUgB,EAAMW,OAAOzB,MAAQ,qBAAwB0B,YAAU,UAC5H5B,EAAUgB,EAAMW,OAAOxB,myMCzBpC,IAqFe0B,EArFD,WAAM,IAAAC,EACMC,mBAAS,IADfC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GACTvD,EADSyD,EAAA,GACJE,EADIF,EAAA,GAAAG,EAEYJ,mBAAS,UAFrBK,EAAAxG,OAAAqG,EAAA,EAAArG,CAAAuG,EAAA,GAET3E,EAFS4E,EAAA,GAEDC,EAFCD,EAAA,GAAAE,EAGgBP,oBAAS,GAHzBQ,EAAA3G,OAAAqG,EAAA,EAAArG,CAAA0G,EAAA,GAGTE,EAHSD,EAAA,GAGEE,EAHFF,EAAA,GAAAG,EAIMX,mBAAS,GAJfY,EAAA/G,OAAAqG,EAAA,EAAArG,CAAA8G,EAAA,GAITE,EAJSD,EAAA,GAIJE,EAJIF,EAAA,GAKVG,EAAeC,YAAc,qCAC7BC,EAAgBD,YAAc,sCAE9BE,EAAYC,mBACZjH,EAAWkH,EAAUxB,MACrB5D,EAAOqF,GAAUzB,MAEvBT,oBAAU,WACN,IAAMmC,EAAWC,YAAW1H,OAAAC,EAAA,EAAAD,CAAA2H,IAAAxH,KAAC,SAAAC,IAAA,OAAAuH,IAAApH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnBkH,IADmB,cAAApH,EAAAE,KAAA,EAEnBmH,IAFmB,cAAArH,EAAAE,KAAA,EAGnBoH,IAHmB,wBAAAtH,EAAAW,SAAAf,MAI1B,KACH,OAAO,kBAAM2H,cAAcN,MAG/B,IAAMG,EAAQ,eAAAnG,EAAAzB,OAAAC,EAAA,EAAAD,CAAA2H,IAAAxH,KAAG,SAAAuB,IAAA,IAAAsG,EAAAC,EAAA,OAAAN,IAAApH,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACSsC,EAAY3C,GADrB,OACP2H,EADOnG,EAAAhB,MAEPoH,EAASD,EAAQrF,OACRA,IACXuB,EAAWuB,IAAI,YACfa,EAAO2B,IALE,wBAAApG,EAAAV,SAAAO,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GASRsG,EAAW,eAAApF,EAAAzC,OAAAC,EAAA,EAAAD,CAAA2H,IAAAxH,KAAG,SAAAuC,IAAA,IAAAwF,EAAAC,EAAA,OAAAR,IAAApH,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACSZ,EAAeO,GADxB,OACV6H,EADUtF,EAAA/B,MAEVsH,EAAYD,EAAWtG,UACXA,IACd6E,EAAU0B,GACVjE,EAAWuB,IAAI,SAAuB,WAAZ0C,EAAuB,SAAW,aAC1C,WAAdA,EAAwBtB,GAAW,GAChB,YAAdsB,GAAyBtB,GAAW,IAPjC,wBAAAjE,EAAAzB,SAAAuB,MAAH,yBAAAD,EAAApB,MAAAC,KAAAC,YAAA,GAWXuG,EAAa,eAAA7E,EAAAjD,OAAAC,EAAA,EAAAD,CAAA2H,IAAAxH,KAAG,SAAA+C,IAAA,IAAAkF,EAAAC,EAAA,OAAAV,IAAApH,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACImD,EAAiBxD,GADrB,OACZ+H,EADYjF,EAAAtC,KAEZwH,EAASD,EAAQ5E,SACnB8E,KAAKC,IAAIF,EAASrB,GAAO,IACzBK,EAAUmB,QAAQC,OAAOJ,EAAQ,WACjCnE,EAAWuB,IAAI,SAAU4C,EAAOrB,EAAI,MAAM,SAE9CC,EAAOoB,GAPW,wBAAAlF,EAAAhC,SAAA+B,MAAH,yBAAAD,EAAA5B,MAAAC,KAAAC,YAAA,GAUbmH,EAAU,eAAApF,EAAAtD,OAAAC,EAAA,EAAAD,CAAA2H,IAAAxH,KAAG,SAAAoD,IAAA,IAAA6E,EAAAC,EAAA,OAAAV,IAAApH,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACOmD,EAAiBxD,GADxB,OACT+H,EADS3E,EAAA5C,KAETwH,EAASD,EAAQ5E,SACvByD,EAAOoB,GACPhB,EAAUmB,QAAQC,OAAOJ,EAAQ,WACjC7G,EAAkBnB,EAAU8B,EAAM,UALnB,wBAAAsB,EAAAtC,SAAAoC,MAAH,yBAAAD,EAAAjC,MAAAC,KAAAC,YAAA,GAQhB,OACIoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACIgD,OAASxB,EAAgB,OAAUF,EAAe,OAAU,OAC5D2B,MAASzB,EAAgB,OAAUF,EAAe,OAAU,OAC5D4B,OAAO,OACPC,UAAQ,EACRC,OAAK,EACLC,QAASrC,EACTjE,IAAKA,EACLuG,IAAK7B,EACL8B,iBAAkB,IAClBC,QAASV,EACTW,QAAS,kBAAM7H,EAAkBnB,EAAU8B,EAAM,YACjDmH,OAAQ,kBAAM9H,EAAkBnB,EAAU8B,EAAM,YAChDoH,QAAS,kBAAM/H,EAAkBnB,EAAU8B,EAAM,WACjDqH,WAAY,SAACC,GAAD,OAAUpG,EAAoBhD,EAAU8B,EAAMsH,EAAKC,gBAC/DC,OAAQ,SAACF,GAAD,OAAUpG,EAAoBhD,EAAU8B,EAAMsH,EAAKC,gBAC3DE,QAAS,kBAAM1F,EAAWuB,IAAI,eAC9BoE,QAAS,kBAAM3F,EAAWuB,IAAI,iBAElCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qyMCxFpB,IAAMgE,EAAU,eAAA/J,EAAAC,OAAAC,EAAA,EAAAD,CAAA+J,IAAA5J,KAAG,SAAAC,EAAO4J,GAAP,IAAA1J,EAAAQ,EAAA,OAAAiJ,IAAAxJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,MAAM,yCAClB,CACIC,OAAQ,OACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+H,KAAMD,MATA,cAEd1J,EAFcE,EAAAK,KAAAL,EAAAE,KAAA,EAaDJ,EAAIQ,OAbH,OAadA,EAbcN,EAAAK,MAcM,IAApB2G,GAAUzB,OAAiBmE,EAAW1C,GAAUzB,OACpDyB,GAAU/B,IAAI3E,EAAKa,IAfDnB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAkBlBS,QAAQC,IAARV,EAAAQ,IAlBkB,yBAAAR,EAAAW,SAAAf,EAAA,kBAAH,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GAqBV4I,EAAQ,eAAA1I,EAAAzB,OAAAC,EAAA,EAAAD,CAAA+J,IAAA5J,KAAG,SAAAuB,IAAA,IAAApB,EAAA,OAAAyJ,IAAAxJ,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAEAC,MAAM,yCAClB,CACIC,OAAQ,QAJA,cAEZN,EAFYuB,EAAAhB,KAAAgB,EAAAnB,KAAA,EAMHJ,EAAIQ,OAND,cAAAe,EAAAd,OAAA,SAAAc,EAAAhB,MAAA,OAAAgB,EAAApB,KAAA,EAAAoB,EAAAb,GAAAa,EAAA,SAShBZ,QAAQC,IAARW,EAAAb,IATgB,yBAAAa,EAAAV,SAAAO,EAAA,iBAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAYR2I,EAAa,SAACE,GACvB,IACIzJ,MAAM,yCAA2CyJ,EAC7C,CACIxJ,OAAQ,WAEhB4G,GAAU/B,KAAI,GAElB,MAAOrD,GACHnB,QAAQC,IAAIkB,KChCLiI,SAVA,WACX,OACI1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,wEACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,mCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,+0MCNL,IAAMwE,EAAW,eAAAvK,EAAAC,OAAAC,EAAA,EAAAD,CAAAuK,IAAApK,KAAG,SAAAC,EAAOC,EAAUsB,EAAI4C,GAArB,OAAAgG,IAAAhK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB,IACIC,MAAM,yCAAyCN,EAAU,QACrD,CACIO,OAAQ,MACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAQR,EACR4C,QAAWA,MAK3B,MAAOnC,GACHnB,QAAQC,IAAIkB,GAhBO,wBAAA5B,EAAAW,SAAAf,MAAH,gBAAAgB,EAAAiB,EAAAC,GAAA,OAAAvC,EAAAsB,MAAAC,KAAAC,YAAA,GAoBXiJ,EAAO,eAAA/I,EAAAzB,OAAAC,EAAA,EAAAD,CAAAuK,IAAApK,KAAG,SAAAuB,EAAOrB,GAAP,IAAAC,EAAA,OAAAiK,IAAAhK,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAECC,MAAM,yCAAyCN,EAAU,QACrE,CACIO,OAAQ,QAJD,cAEXN,EAFWuB,EAAAhB,KAAAgB,EAAAnB,KAAA,EAMFJ,EAAIQ,OANF,cAAAe,EAAAd,OAAA,SAAAc,EAAAhB,MAAA,OAAAgB,EAAApB,KAAA,EAAAoB,EAAAb,GAAAa,EAAA,SASfZ,QAAQC,IAARW,EAAAb,IATe,yBAAAa,EAAAV,SAAAO,EAAA,iBAAH,gBAAAa,GAAA,OAAAd,EAAAJ,MAAAC,KAAAC,YAAA,GCSLkJ,SAvBKC,IAAMC,WAAW,SAACC,EAAM1B,GAAQ,IAAAhD,EACjCC,mBAASyE,EAAMC,MAAvBA,EADyC7K,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,MAE1C4E,EAAWF,EAAMG,KAFyBxE,EAGxBJ,qBAHwBK,EAAAxG,OAAAqG,EAAA,EAAArG,CAAAuG,EAAA,GAGzCwE,EAHyCvE,EAAA,GAGnCwE,EAHmCxE,EAAA,GAAAE,EAIjCP,mBAASyE,EAAMX,MAAvBA,EAJyCjK,OAAAqG,EAAA,EAAArG,CAAA0G,EAAA,MAchD,OARApB,oBAAU,WACN,QAAa2F,IAATF,EAAJ,CACA7G,EAAWuB,IAAI,cACf,IAAMyF,EAAO,IAAIC,KAAK,MACtBD,EAAKE,gBAAgBN,GACrBE,EAAQE,EAAKG,cAAcC,UAAU,GAAI,QAIzC3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWyF,KAAK,WAAWrC,IAAKA,GAC3CvD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeiF,GAC/BpF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAemE,EAA/B,KACAtE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAe+E,8xMCpB3C,IAgCeW,EAhCG,WAAM,IAAAtF,EACgBC,mBAAS,IADzBC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GACbuF,EADarF,EAAA,GACDsF,EADCtF,EAAA,GAEd/F,EAAWkH,EAAUxB,MACrB5D,EAAOqF,GAAUzB,MAGjB4F,EAAW,eAAA5L,EAAAC,OAAAC,EAAA,EAAAD,CAAA4L,IAAAzL,KAAG,SAAAC,EAAOgF,GAAP,OAAAwG,IAAArL,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChB0E,EAAMyG,iBADUrL,EAAAE,KAAA,EAEV4J,EAAYjK,EAAU8B,EAAMsJ,GAFlB,OAGhBC,EAAc,IAHE,wBAAAlL,EAAAW,SAAAf,MAAH,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GAMjB,OACIoE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYgG,SAAUH,GAClChG,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBiG,QAAQ,eAA5C,sBAGApG,EAAAC,EAAAC,cAAA,SACIoE,KAAK,cACL+B,KAAK,OACLrK,GAAG,cACHsK,MAAOR,EACPS,YAAY,iBACZC,UAAU,MACVC,aAAa,MACbC,UAAU,IACVC,SArBc,SAAClH,GAAYsG,EAActG,EAAMmH,OAAON,myMCEtE,IA2CeO,EA3CF,WACT,IAAMnM,EAAWkH,EAAUxB,MADZG,EAEmBC,mBAAS,IAF5BC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GAERuG,EAFQrG,EAAA,GAEGsG,EAFHtG,EAAA,GAGTuG,EAASrF,mBAHAf,EAImBJ,mBAAS,GAJ5BK,EAAAxG,OAAAqG,EAAA,EAAArG,CAAAuG,EAAA,GAIRqG,EAJQpG,EAAA,GAIGqG,EAJHrG,EAAA,GAMTsG,EAAiB,kBAAMH,EAAOnE,QAAQuE,eAAe,CAAEC,SAAU,YAEvE1H,oBAAU,WACFsH,EAAYH,EAAUQ,SACtBJ,EAAaJ,EAAUQ,QACvBH,KAEJ,IAAMrF,EAAWC,YAAW1H,OAAAC,EAAA,EAAAD,CAAAkN,IAAA/M,KAAC,SAAAC,IAAA,OAAA8M,IAAA3M,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAoByM,IAApB,wBAAA3M,EAAAW,SAAAf,MAAuC,KACpE,OAAO,kBAAM2H,cAAcN,MAG/B,IAAM0F,EAAa,eAAA1L,EAAAzB,OAAAC,EAAA,EAAAD,CAAAkN,IAAA/M,KAAG,SAAAuB,IAAA,IAAA+H,EAAA2D,EAAAC,EAAAC,EAAA,OAAAJ,IAAA3M,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACC8J,EAAQnK,GADT,UACZoJ,EADY5H,EAAAhB,UAGDoK,KADXmC,EAAW3D,EAAK2D,UAFJ,CAAAvL,EAAAnB,KAAA,eAAAmB,EAAAd,OAAA,wBAAAc,EAAAnB,KAAA,EAIEyJ,IAJF,OAIZkD,EAJYxL,EAAAhB,KAKZyM,EAAOD,EAAME,MACnBH,EAASI,QAAQ,SAACjJ,GACd,IAAMpC,EAAOmL,EAAKG,KAAK,SAACC,GAAc,OAAOnJ,EAAQ6F,SAAWsD,EAAQ/L,KAClEsI,EAAO9H,EAAOA,EAAK8H,KAAO,gBAChC1F,EAAQpC,KAAO8H,IAEnByC,EAAaU,GAXK,yBAAAvL,EAAAV,SAAAO,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAcnB,OACIoE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+H,SAAA,KACIhI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYyF,KAAK,OAAOqC,aAAW,OAAO5H,YAAU,SAAS6H,QAASf,GAChFL,EAAUqB,IAAI,SAACC,GAAD,OAAOpI,EAAAC,EAAAC,cAACmI,EAAD,CAAaC,IAAKF,EAAEpM,GAAIoJ,KAAMgD,EAAEhD,KAAMF,KAAMkD,EAAElD,KAAMZ,KAAM8D,EAAE5L,UAEtFwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,IAA6BH,EAAAC,EAAAC,cAACqI,EAAD,MAA7B,KACAvI,EAAAC,EAAAC,cAAA,OAAKqD,IAAKyD,6xMC3CtB,IAAMwB,EAAkB,SAACvD,GAAU,IAAA1E,EAChBC,mBAASyE,EAAMX,MAAvBA,EADwBjK,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,MAE/B,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeyF,KAAK,YAC9BtB,IAwCEmE,EAjCE,WACb,IAAM/N,EAAWkH,EAAUxB,MADRQ,EAEeJ,mBAAS,IAFxBK,EAAAxG,OAAAqG,EAAA,EAAArG,CAAAuG,EAAA,GAEZkG,EAFYjG,EAAA,GAEDkG,EAFClG,EAAA,GAAAE,EAGeP,mBAAS,GAHxBQ,EAAA3G,OAAAqG,EAAA,EAAArG,CAAA0G,EAAA,GAGZkG,EAHYjG,EAAA,GAGDkG,EAHClG,EAAA,GAKnBrB,oBAAU,WACFsH,EAAYH,EAAUQ,OACtB/I,EAAWuB,IAAI,YACVmH,EAAYH,EAAUQ,QAC3B/I,EAAWuB,IAAI,aACnBoH,EAAaJ,EAAUQ,QAEvB,IAAMxF,EAAWC,YAAW1H,OAAAC,EAAA,EAAAD,CAAAqO,IAAAlO,KAAC,SAAAC,IAAA,OAAAiO,IAAA9N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAoB4N,IAApB,wBAAA9N,EAAAW,SAAAf,MAAqC,KAClE,OAAO,kBAAM2H,cAAcN,MAG/B,IAAM6G,EAAU,eAAA7M,EAAAzB,OAAAC,EAAA,EAAAD,CAAAqO,IAAAlO,KAAG,SAAAuB,IAAA,IAAA+H,EAAA8D,EAAA,OAAAc,IAAA9N,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACI6N,EAAalO,GADjB,UACToJ,EADS5H,EAAAhB,UAGDoK,KADRsC,EAAQ9D,EAAK8D,OAFJ,CAAA1L,EAAAnB,KAAA,eAAAmB,EAAAd,OAAA,iBAIf2L,EAAaa,GAJE,wBAAA1L,EAAAV,SAAAO,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAOhB,OACIoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYyF,KAAK,OAAOqC,aAAW,QAC7CnB,EAAUqB,IAAI,SAAA3L,GAAI,OAAKwD,EAAAC,EAAAC,cAAC2I,EAAD,CAAiBvE,KAAM9H,EAAK8H,KAAMgE,IAAK9L,EAAKR,UCJrE8M,SApCI,WACf,IAAMpO,EAAWkH,EAAUxB,MACrB5D,EAAOqF,GAAUzB,MAFFG,EAGKC,mBAAS,IAHdC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GAGdwI,EAHctI,EAAA,GAGPuI,EAHOvI,EAAA,GAcrB,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBgG,SAR1B,SAAC1G,GACdA,EAAMyG,iBACNrJ,EAAenC,EAAU8B,EAAMuM,GAC/BC,EAAS,MAMDhJ,EAAAC,EAAAC,cAAA,SAAOkG,QAAQ,MAAMjG,UAAU,qBAA/B,sBAGAH,EAAAC,EAAAC,cAAA,SACImG,KAAK,OACL/B,KAAK,MACLtI,GAAG,MACHmE,UAAU,kBACVoG,YAAY,oCACZD,MAAOyC,EACPpC,SAvBU,SAAClH,GACvBuJ,EAASvJ,EAAMmH,OAAON,UAwBdtG,EAAAC,EAAAC,cAAA,SAAOmG,KAAK,SAASlG,UAAU,qBAAqBmG,MAAM,wCC9B7D2C,EAAkBzK,aAAU,GA+F1B0K,EA7FF,WACT,IAAMjN,EAASyD,YAAauJ,GAEtBE,EAAS,WAAQlN,EAAO6D,KAAK7D,IAEnC,OACI+D,EAAAC,EAAAC,cAACkJ,EAAAnJ,EAAD,CACIoJ,iBAAiB,UACjBlJ,UAAU,qBACVmJ,OAAQrN,EAAOmE,MACfmJ,eAAgBJ,EAChBK,wBAAwB,EACxBC,2BAA2B,EAC3BC,kBAAkB,EAClBC,6BAA6B,EAC7BC,eAAe,EACfC,aAAc,sBAEd7J,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,ySAMJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,2FACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,6VAKAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,kNAKJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,wXAOJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,yUAMJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,8LAKJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,qUAKJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,2GAIJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,kgBAQJF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAY2J,QAASX,GAAvC,UC1ECvH,EAAYpD,aAAU,GA0CpBuL,EAxCF,WACT,IAAMrP,EAAWgF,YAAakC,GACxBoI,EAAWC,cACXC,EAAiBC,sBAAY,kBAAMH,EAAS,IAAK,CAAEI,SAAS,KAAS,CAACJ,IAkB5E,OAhBArK,oBAAU,YACiB,IAAnBjF,EAAS0F,OACT8J,IAEJ,IAAMG,EAAiB,SAAA5K,GAKnB,OAJAA,EAAMyG,iBACNoE,GAAU5P,EAAS0F,MAAOyB,GAAUzB,OACpCmE,EAAW1C,GAAUzB,OACrB9E,QAAQC,IAAI,gBACJkE,EAAM8K,YAAc,kCAIhC,OAFAC,OAAOC,iBAAiB,eAAgBJ,GAEjC,kBAAMG,OAAOE,oBAAoB,eAAgBL,MAIxDrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACyK,EAAA,EAAD,KACI3K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,KACI3K,EAAAC,EAAAC,cAAA,aAAQ,kBAAoBxF,EAAS0F,QAEzCJ,EAAAC,EAAAC,cAAC0K,GAAD,MACA5K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QAA4BH,EAAAC,EAAAC,cAAC2K,EAAD,MAA5B,KACA7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,SAA4BH,EAAAC,EAAAC,cAAC4K,EAAD,MAA5B,KACA9K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAC6K,EAAD,MAA5B,KACA/K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QAA4BH,EAAAC,EAAAC,cAAC8K,EAAD,MAA5B,KACAhL,EAAAC,EAAAC,cAAC+K,EAAD,MACAjL,EAAAC,EAAAC,cAACgL,EAAD,MACAlL,EAAAC,EAAAC,cAACiL,EAAD,0xMCtDT,IAAMC,EAAU,eAAAhR,EAAAC,OAAAC,EAAA,EAAAD,CAAAgR,IAAA7Q,KAAG,SAAAC,IAAA,IAAAE,EAAAQ,EAAA,OAAAkQ,IAAAzQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,MAAM,yCAClB,CACIC,OAAQ,SAJE,cAEdN,EAFcE,EAAAK,KAAAL,EAAAE,KAAA,EAODJ,EAAIQ,OAPH,cAOdA,EAPcN,EAAAK,KAAAL,EAAAO,OAAA,SAQXD,EAAKmJ,MARM,QAAAzJ,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAWlBS,QAAQC,IAARV,EAAAQ,IAXkB,yBAAAR,EAAAW,SAAAf,EAAA,kBAAH,yBAAAL,EAAAsB,MAAAC,KAAAC,YAAA,GAcV0P,EAAQ,eAAAxP,EAAAzB,OAAAC,EAAA,EAAAD,CAAAgR,IAAA7Q,KAAG,SAAAuB,EAAOrB,EAAUsB,GAAjB,OAAAqP,IAAAzQ,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACpB,IACIC,MAAM,yCAA2CN,EAAW,SACxD,CACIO,OAAQ,MACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAQR,MAKxB,MAAOS,GACHnB,QAAQC,IAAIkB,GAfI,wBAAAP,EAAAV,SAAAO,MAAH,gBAAAN,EAAAiB,GAAA,OAAAZ,EAAAJ,MAAAC,KAAAC,YAAA,GAkBRgN,EAAY,eAAA9L,EAAAzC,OAAAC,EAAA,EAAAD,CAAAgR,IAAA7Q,KAAG,SAAAuC,EAAOrC,GAAP,IAAAC,EAAA,OAAA0Q,IAAAzQ,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAEJC,MAAM,yCAA2CN,EAAW,SACxE,CACIO,OAAQ,QAJI,cAEhBN,EAFgBsC,EAAA/B,KAAA+B,EAAAlC,KAAA,EAOPJ,EAAIQ,OAPG,cAAA8B,EAAA7B,OAAA,SAAA6B,EAAA/B,MAAA,OAAA+B,EAAAnC,KAAA,EAAAmC,EAAA5B,GAAA4B,EAAA,SAUpB3B,QAAQC,IAAR0B,EAAA5B,IAVoB,yBAAA4B,EAAAzB,SAAAuB,EAAA,iBAAH,gBAAAJ,GAAA,OAAAG,EAAApB,MAAAC,KAAAC,YAAA,GAaZ0O,GAAS,eAAAhN,EAAAjD,OAAAC,EAAA,EAAAD,CAAAgR,IAAA7Q,KAAG,SAAA+C,EAAO7C,EAAUsB,GAAjB,OAAAqP,IAAAzQ,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OACrB,IACIC,MAAM,yCAA2CN,EAAW,SACxD,CACIO,OAAQ,SACRkB,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAQR,MAIpBuP,GAAezL,KAAI,GACnB8B,EAAU9B,KAAI,GAElB,MAAOrD,GACHnB,QAAQC,IAAIkB,GAjBK,wBAAAe,EAAAhC,SAAA+B,MAAH,gBAAAX,EAAAM,GAAA,OAAAI,EAAA5B,MAAAC,KAAAC,YAAA,GAqBT4P,GAAQ,eAAA7N,EAAAtD,OAAAC,EAAA,EAAAD,CAAAgR,IAAA7Q,KAAG,SAAAoD,IAAA,IAAAjD,EAAA,OAAA0Q,IAAAzQ,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAAhD,KAAA,EAAAgD,EAAA/C,KAAA,EAEAC,MAAM,yCAClB,CACIC,OAAQ,QAJA,cAEZN,EAFYmD,EAAA5C,KAAA4C,EAAA/C,KAAA,EAOHJ,EAAIQ,OAPD,cAAA2C,EAAA1C,OAAA,SAAA0C,EAAA5C,MAAA,OAAA4C,EAAAhD,KAAA,EAAAgD,EAAAzC,GAAAyC,EAAA,SAUhBxC,QAAQC,IAARuC,EAAAzC,IAVgB,yBAAAyC,EAAAtC,SAAAoC,EAAA,iBAAH,yBAAAD,EAAAjC,MAAAC,KAAAC,YAAA,sxMCxDd,IAAM2P,GAAiB/M,YAAU,IA+DzBiN,GA7DA,WACX/L,YAAa6L,IACb,IAAMG,EAAOH,GAAenL,MAFXG,EAGSC,mBAAS,MAHlBC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GAGVoL,EAHUlL,EAAA,GAGHmL,EAHGnL,EAAA,GAAAG,EAIGJ,mBAASkL,GAAtBG,EAJUxR,OAAAqG,EAAA,EAAArG,CAAAuG,EAAA,MAMXoJ,EAAWC,cACXC,EAAiBC,sBAAY,kBAAMH,EAAS,IAAK,CAAEI,SAAS,KAAS,CAACJ,IAE5ErK,oBAAU,WAAQmM,MAElB,IAAMA,EAAU,eAAA1R,EAAAC,OAAAC,EAAA,EAAAD,CAAA0R,KAAAvR,KAAG,SAAAC,IAAA,IAAAqJ,EAAA8D,EAAAoE,EAAA,OAAAD,KAAAnR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACX8G,GAAUzB,MADC,CAAAvF,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEQyJ,IAFR,OAELV,EAFKjJ,EAAAK,UAIGoK,KADRsC,EAAQ9D,EAAK8D,OAEfgE,EAAS,OAEHI,EAAIpE,EAAME,KAAK,SAACkE,GAAD,OAAOnK,GAAUzB,QAAU4L,EAAEhQ,KAClD4P,EAASI,EAAE1H,OARJzJ,EAAAE,KAAA,eAWV6Q,EAAS,MAXC,wBAAA/Q,EAAAW,SAAAf,MAAH,yBAAAL,EAAAsB,MAAAC,KAAAC,YAAA,GAcVqQ,EAAgB,SAACC,GACC,SAAhBA,EAAEtF,OAAO5K,IAA2B,UAAVkQ,EAAE5D,KAAiB6D,IAC7B,SAAhBD,EAAEtF,OAAO5K,IAA2B,UAAVkQ,EAAE5D,KAAiB8D,KAE/CD,EAAiB,YACN,IAATT,IACAH,GAAezL,KAAI,GACnBwK,GAAUoB,EAAM7J,GAAUzB,QAE9B8J,KAGEkC,EAAa,WAAQnD,EAAgBnJ,KAAI,IAO/C,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyF,KAAK,cACtB5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKmM,SAAS,IAAIzG,KAAK,OAAO5J,GAAG,OAAOiM,aAAW,aAAa9H,UAAU,YAAY2J,QAASqC,EAAgBG,UAAWL,GACtHjM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcwL,KAGrC3L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYyF,KAAK,OAAOqC,aAAW,sBAAsBoE,SAAUR,EAAY,IAAM,KAAO/B,QAdtG,WACbyC,UAAUC,UAAUC,UAAU,4CAA8Cf,GAC5EnN,EAAWuB,IAAI,gBAYwH+L,EAAYA,EAAU,gBAAQ,OAEjK7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYyF,KAAK,OAAO5J,GAAG,OAAOiM,aAAW,kBAAeoE,SAAS,IAAIvC,QAASsC,EAAYE,UAAWL,GAAxH,izMC3DT,IAAMS,GAAkBlO,aAAU,GAEzCmO,IAAWC,cAAc,SAEzB,IA0DeC,GA1DG,WACd,IAAM7C,EAAWC,cACX6C,EAAiB3C,sBAAY,kBAAMH,EAAS,QAAS,CAAEI,SAAS,KAAS,CAACJ,IAF5DzJ,EAGIC,mBAAS,IAHbC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GAGb+D,EAHa7D,EAAA,GAGPsM,EAHOtM,EAAA,GAIdxE,EAASyD,YAAagN,IAGtBvD,EAAS,WAAQlN,EAAO6D,KAAK7D,EAAOmE,QAEpC4F,EAAW,eAAA5L,EAAAC,OAAAC,EAAA,EAAAD,CAAA2S,KAAAxS,KAAG,SAAAC,EAAOgF,GAAP,IAAA/E,EAAA,OAAAsS,KAAApS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChB0E,EAAMyG,iBADUrL,EAAAE,KAAA,EAGVoJ,EAAWG,GAHD,WAIQ,IAApB1C,EAAUxB,MAJE,CAAAvF,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAKWqQ,IALX,OAKN1Q,EALMG,EAAAK,KAMZ0G,EAAU9B,IAAIpF,GACd6Q,GAAezL,IAAIpF,GAPP,OAShB4Q,EAAS1J,EAAUxB,MAAMyB,GAAUzB,OACnC0M,IACA3D,IACA4D,EAAQ,IAZQ,yBAAAlS,EAAAW,SAAAf,MAAH,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GAcjB,OACIoE,EAAAC,EAAAC,cAACkJ,EAAAnJ,EAAD,CACIoJ,iBAAmB,UACnBlJ,UAAY,gBACZmJ,OAAQrN,EAAOmE,MACfmJ,eAAgBJ,EAChBK,wBAA0B,EAC1BC,2BAA6B,EAC7BC,kBAAoB,EACpBC,6BAA+B,EAC/BC,eAAiB,EACjBC,aAAc,+CAEd7J,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,wEACAH,EAAAC,EAAAC,cAAA,QAAMiG,SAAUH,EAAa7F,UAAU,mBACnCH,EAAAC,EAAAC,cAAA,SAAOkG,QAAQ,WAAWjG,UAAU,oBAApC,iBAGAH,EAAAC,EAAAC,cAAA,SACIC,UAAU,mBACVmE,KAAK,WACL+B,KAAK,OACLrK,GAAG,WACHsK,MAAOhC,EACPiC,YAAY,OACZC,UAAY,KACZE,UAAU,IACVD,aAAa,MACbE,SA7CU,SAAClH,GAAYsN,EAAQtN,EAAMmH,OAAON,UA8ChDtG,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBkG,KAAK,SAASC,MAAM,mBAE7DtG,EAAAC,EAAAC,cAAA,UAAQC,UAAY,aAAa2J,QAASX,GAA1C,6xMC7DZ,IA4Be8D,GA5BI,WACf,IAAMjD,EAAWC,cACX6C,EAAiB3C,sBAAY,kBAAMH,EAAS,QAAS,CAAEI,SAAS,KAAS,CAACJ,IAC1EkD,EAAe,eAAA9S,EAAAC,OAAAC,EAAA,EAAAD,CAAA8S,KAAA3S,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAyS,KAAAvS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACI,IAApB8G,GAAUzB,MADM,CAAAvF,EAAAE,KAAA,QAEhB2R,GAAgB5M,KAAI,GACpBxE,QAAQC,IAAI,wCAHIV,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAKOqQ,IALP,OAKV1Q,EALUG,EAAAK,KAMhB0G,EAAU9B,IAAIpF,GACd6Q,GAAezL,IAAIpF,GACnB4Q,EAAS5Q,EAAUmH,GAAUzB,OAC7B0M,IATgB,yBAAAjS,EAAAW,SAAAf,MAAH,yBAAAL,EAAAsB,MAAAC,KAAAC,YAAA,GAarB,OACIoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,wBACAH,EAAAC,EAAAC,cAAA,MAAI0F,KAAK,QAAT,mBAEJ5F,EAAAC,EAAAC,cAAA,UAAQmG,KAAK,SAASyD,QAASoD,EAAiBlR,GAAG,cAAnD,+DClBGoR,GARS,WACpB,OACIpN,EAAAC,EAAAC,cAAA,SAAOlE,GAAG,mBAAmBqR,UAAQ,EAACC,MAAI,GACtCtN,EAAAC,EAAAC,cAAA,UAAQqN,IAAKC,KAAOnH,KAAK,yyMCGrC,IAmCeoH,GAnCS,SAACxI,GAAU,IAAA1E,EACZC,mBAASyE,EAAMX,MAA3B5J,EADwBL,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,MAAAK,EAEFJ,qBAFEK,EAAAxG,OAAAqG,EAAA,EAAArG,CAAAuG,EAAA,GAExB8M,EAFwB7M,EAAA,GAEhB8M,EAFgB9M,EAAA,GAGzBmJ,EAAWC,cACX6C,EAAiB3C,sBAAY,kBAAMH,EAAS,QAAS,CAAEI,SAAS,KAAS,CAACJ,IAEhFrK,oBAAU,WAAMiO,MAChB,IAAMA,EAAU,eAAAxT,EAAAC,OAAAC,EAAA,EAAAD,CAAAwT,KAAArT,KAAG,SAAAC,IAAA,IAAAqJ,EAAA8D,EAAA,OAAAiG,KAAAjT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACI6N,EAAalO,GADjB,OACToJ,EADSjJ,EAAAK,KAET0M,EAAQ9D,EAAK8D,MACnB+F,EAAY/F,EAAMN,QAA2B,IAAjBM,EAAMN,OAAe,WAAa,cAH/C,wBAAAzM,EAAAW,SAAAf,MAAH,yBAAAL,EAAAsB,MAAAC,KAAAC,YAAA,GAOVkS,EAAS,eAAAhS,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwT,KAAArT,KAAG,SAAAuB,IAAA,OAAA8R,KAAAjT,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACd6G,EAAU9B,IAAIpF,GACd6Q,GAAezL,IAAIpF,IACK,IAApBmH,GAAUzB,OACVsM,GAAgB5M,KAAI,GACpBxE,QAAQC,IAAI,wCAEZ+P,EAAS5Q,EAAUmH,GAAUzB,OAC7B0M,KARU,wBAAA5Q,EAAAV,SAAAO,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAYf,OACIoE,EAAAC,EAAAC,cAAA,OAAKmM,SAAS,IAAIlM,UAAU,eAAe2J,QAASgE,EAAWxB,UAd7C,SAACJ,GAAsB,UAAVA,EAAE5D,KAAiBwF,MAe9C9N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAhB,QACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBzF,GACrCsF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBuN,+xMCpCjD,IAyBeK,GAzBE,WAAM,IAAAxN,EACeC,mBAAS,IADxBC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GACZuG,EADYrG,EAAA,GACDsG,EADCtG,EAAA,GAGnBd,oBAAU,WACN,IAAMmC,EAAWC,YAAW1H,OAAAC,EAAA,EAAAD,CAAA2T,KAAAxT,KAAC,SAAAC,IAAA,OAAAuT,KAAApT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAoBkT,IAApB,wBAAApT,EAAAW,SAAAf,MAAqC,KAClE,OAAO,kBAAM2H,cAAcN,MAG/B,IAAMmM,EAAU,eAAAnS,EAAAzB,OAAAC,EAAA,EAAAD,CAAA2T,KAAAxT,KAAG,SAAAuB,IAAA,IAAA+H,EAAAoK,EAAA,OAAAF,KAAApT,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACIyQ,KADJ,UACT1H,EADS5H,EAAAhB,UAGDoK,KADR4I,EAAQpK,EAAKoK,OAFJ,CAAAhS,EAAAnB,KAAA,eAAAmB,EAAAd,OAAA,iBAIf2L,EAAamH,GAJE,wBAAAhS,EAAAV,SAAAO,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAOhB,OACIoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,wBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8H,aAAW,YACjCnB,EAAUqB,IAAI,SAAA+D,GAAC,OAAKlM,EAAAC,EAAAC,cAACiO,GAAD,CAAiB7J,KAAM4H,EAAE5H,KAAMgE,IAAK4D,EAAE5H,+xMCFpE,IAAMzC,GAAYrD,aAAU,GAyDpB4P,GAvDH,WACR,IAAM5R,EAAOkD,YAAamC,IAGpBwM,EADWC,cACKC,SAAS5I,UAAU,GACnCqE,EAAWC,cACXuE,EAAqBrE,sBAAY,kBAAMH,EAAS,YAAa,CAAEI,SAAS,KAAS,CAACJ,IAExFrK,oBAAU,WACN8O,IACA,IAAMpE,EAAiB,SAAA5K,GACnB,GAAIjD,EAAK4D,MAKL,OAJAX,EAAMyG,kBACkB,IAApBtE,EAAUxB,OAAiBkK,GAAU1I,EAAUxB,MAAO5D,EAAK4D,OAC/D9E,QAAQC,IAAI,wCAAwCiB,EAAK4D,OACzDmE,EAAW/H,EAAK4D,OACRX,EAAM8K,YAAc,kCAMpC,OAFAC,OAAOC,iBAAiB,eAAgBJ,GAEjC,kBAAMG,OAAOE,oBAAoB,eAAgBL,KACzD,IAEH,IAAMoE,EAAS,eAAArU,EAAAC,OAAAC,EAAA,EAAAD,CAAAqU,KAAAlU,KAAG,SAAAC,IAAA,IAAAqJ,EAAAoK,EAAA,OAAAQ,KAAA9T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACKyQ,KADL,UACR1H,EADQjJ,EAAAK,UAGAoK,KADR4I,EAAQpK,EAAKoK,OAFL,CAAArT,EAAAE,KAAA,eAAAF,EAAAO,OAAA,oBAID,KAATiT,EAJU,CAAAxT,EAAAE,KAAA,eAAAF,EAAAO,OAAA,oBAKdE,QAAQC,IAAI8S,QAEC/I,IADE4I,EAAMpG,KAAK,SAAC4D,GAAQ,OAAOA,EAAKpH,OAAO+J,IANxC,CAAAxT,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SAOiBoT,KAPjB,QAQd5M,EAAU9B,IAAIuO,GACd9C,GAAezL,IAAIuO,GACnB3B,GAAgB5M,KAAI,GACpBxE,QAAQC,IAAI,sCAXE,yBAAAV,EAAAW,SAAAf,MAAH,yBAAAL,EAAAsB,MAAAC,KAAAC,YAAA,GAcf,OACIoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACI3O,EAAAC,EAAAC,cAAA,8BAEJF,EAAAC,EAAAC,cAAC0K,GAAD,MACA5K,EAAAC,EAAAC,cAAC0O,GAAD,MACA5O,EAAAC,EAAAC,cAAC2O,GAAD,MACA7O,EAAAC,EAAAC,cAAC4O,GAAD,MACA9O,EAAAC,EAAAC,cAAC+K,EAAD,MACAjL,EAAAC,EAAAC,cAAC6O,GAAD,MACA/O,EAAAC,EAAAC,cAACiL,EAAD,gBC3CG6D,WA1BE,WACb,IAEMhF,EAAWC,cACXC,EAAiBC,sBAAY,kBAAMH,EAAS,IAAK,CAAEI,SAAS,KAAS,CAACJ,IAC5E,OACIhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACI3O,EAAAC,EAAAC,cAAA,aAPE,kCASNF,EAAAC,EAAAC,cAAC0K,GAAD,MACA5K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,yBACAH,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,oHACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgB2J,QAASI,GAA3C,sCAGRlK,EAAAC,EAAAC,cAAC+K,EAAD,MACAjL,EAAAC,EAAAC,cAACiL,EAAD,SCnBC8D,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OACDrP,EAAAC,EAAAC,cAACoP,GAAA,EAAD,CAAQC,KAAK,KACbvP,EAAAC,EAAAC,cAACsP,EAAA,EAAD,KACIxP,EAAAC,EAAAC,cAACsP,EAAA,EAAD,CAAOnB,KAAK,IAAItG,QAAS/H,EAAAC,EAAAC,cAACuP,GAAD,QACzBzP,EAAAC,EAAAC,cAACsP,EAAA,EAAD,CAAOnB,KAAK,QAAQtG,QAAS/H,EAAAC,EAAAC,cAACwP,EAAD,QAC7B1P,EAAAC,EAAAC,cAACsP,EAAA,EAAD,CAAOnB,KAAK,YAAYtG,QAAS/H,EAAAC,EAAAC,cAACyP,GAAD,QACjC3P,EAAAC,EAAAC,cAACsP,EAAA,EAAD,CAAOnB,KAAK,IAAItG,QAAS/H,EAAAC,EAAAC,cAACuP,GAAD,+BClBjCG,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.9a371442.chunk.js","sourcesContent":["/* \r\nHier werden die API-Calls definiert um die Nutzung zu vereinfachen.\r\n*/\r\nexport const getVideoStatus = async (roomName) => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+'/status',\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        )\r\n        return await res.json()\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const changeVideoStatus = async (roomName, id, status) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+'/status',\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user\": id,\r\n                    \"status\": status\r\n                }\r\n                )\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const changeVideoUrl = async (roomName, id, url) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+'/video',\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user\": id,\r\n                    \"url\":  url\r\n                })\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getVideoUrl = async (roomName) => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+'/video',\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        )\r\n        return await res.json()\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const changeVideoPosition = async (roomName, id, position) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+'/position',\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user\": id,\r\n                    \"position\":  position\r\n                })\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getVideoPosition = async (roomName) => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+'/position',\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        )\r\n        return await res.json()\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React from \"react\";\r\nimport { hookstate, useHookstate } from \"@hookstate/core\";\r\nimport { useEffect } from \"react\";\r\nimport \"./styles/EventHandler.css\";\r\n/* \r\nDer EventHandler zeigt innerhalb eines Raumes Benachrichtigungen an.\r\nEr wird von anderen Klassen über den Hookstate geändert.\r\nEr dient somit der Barrierefreiheit.\r\n */\r\nexport const eventState = hookstate(\"Empty\");\r\n\r\nconst eventType = {\r\n    UserLeave:      {color:\"event-gray\",message:\"Ein User hat den Raum verlassen\"},\r\n    UserJoin:       {color:\"event-gray\",message:\"Ein User ist dem Raum beigetreten\"},\r\n    NewMessage:     {color:\"event-gray\",message:\"Neue Chat-Nachricht\"},\r\n    VideoPaused:    {color:\"event-gray\",message:\"Das Video wurde pausiert\"},\r\n    VideoUnpaused:  {color:\"event-gray\",message:\"Das Video wurde entpausiert\"},\r\n    VideoFFW:       {color:\"event-gray\",message:\"Das Video wurde vorgespult\"},\r\n    VideoREW:       {color:\"event-gray\",message:\"Das Video wurde zurückgespult\"},\r\n\r\n    VideoError:     {color:\"event-red\",message:\"Es ist ein Fehler bei dem Video aufgetreten\"},\r\n    \r\n    VideoEnded:     {color:\"event-green\",message:\"Das Video ist vorbei\"},\r\n    NewVideo:       {color:\"event-green\",message:\"Neues Video\"},\r\n    LinkCopied:     {color:\"event-green\",message:\"✔ Link in Zwischenablage kopiert\"},\r\n    Empty:          {color:\"\",message:\"\"}\r\n}\r\n\r\nconst EventHandler = () => {\r\n    const event = useHookstate(eventState);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => { event.set(\"Empty\") }, 3000);\r\n        return () => clearTimeout(timeout)\r\n    });\r\n\r\n    return (\r\n        <div className={ (event.get()!==\"Empty\" ? \"event-flex-shown \" + eventType[event.get()].color : \"event-flex-hidden \") } aria-live=\"polite\">\r\n            {eventType[event.get()].message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventHandler;","import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport \"./styles/Video.css\";\r\nimport { userState } from '../App';\r\nimport { getVideoUrl, changeVideoStatus, getVideoStatus, getVideoPosition, changeVideoPosition } from './API/VideoAPI';\r\nimport { roomState } from '../Room';\r\nimport { eventState } from './EventHandler';\r\nimport {useMediaQuery } from '@react-hook/media-query';\r\n/*  \r\nDas Video-Element enthällt den React-Player und synchronisiert sich mit der API.\r\nJede Sekunden werden die URL, der Status und die Position abgefragt und wenn nötig\r\ngeändert. Über matches wird der Player. responsiv gemacht. \r\n */\r\nconst Video = () => {\r\n    const [url, setUrl] = useState(\"\");\r\n    const [status, setStatus] = useState(\"paused\");\r\n    const [isPlaying, setPlaying] = useState(false);\r\n    const [pos, setPos] = useState(0);\r\n    const matchesWidth = useMediaQuery(\"only screen and (max-width:900px)\");\r\n    const matchesHeight = useMediaQuery(\"only screen and (max-height:400px)\")\r\n\r\n    const playerRef = useRef();\r\n    const roomName = roomState.get();\r\n    const user = userState.get();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            await videoUrl();\r\n            await videoStatus();\r\n            await videoPosition();\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    const videoUrl = async () => {\r\n        const dataUrl = await getVideoUrl(roomName);\r\n        const newUrl = dataUrl.url;\r\n        if (newUrl !== url) {\r\n            eventState.set(\"NewVideo\")\r\n            setUrl(newUrl)\r\n        };\r\n    };\r\n\r\n    const videoStatus = async () => {\r\n        const dataStatus = await getVideoStatus(roomName);\r\n        const newStatus = dataStatus.status;\r\n        if (newStatus !== status) {\r\n            setStatus(newStatus);\r\n            eventState.set(\"Video\" + (newStatus===\"paused\" ? \"Paused\" : \"Unpaused\"))\r\n            if (newStatus === \"paused\") setPlaying(false);\r\n            else if (newStatus === \"playing\") setPlaying(true);\r\n        }\r\n    };\r\n\r\n    const videoPosition = async () => {\r\n        const dataPos = await getVideoPosition(roomName);\r\n        const newPos = dataPos.position;\r\n        if (Math.abs(newPos - pos) > 3) {\r\n            playerRef.current.seekTo(newPos, 'seconds');\r\n            eventState.set(\"Video\"+ (newPos>pos?\"FFW\":\"REW\"))\r\n        }\r\n        setPos(newPos);\r\n    };\r\n\r\n    const setupVideo = async () => {\r\n        const dataPos = await getVideoPosition(roomName);\r\n        const newPos = dataPos.position;\r\n        setPos(newPos);\r\n        playerRef.current.seekTo(newPos, 'seconds');\r\n        changeVideoStatus(roomName, user, \"paused\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-container\">\r\n            <ReactPlayer\r\n                height={ matchesHeight ? '70vh' : (matchesWidth ? '25vh' :  '70vh') }\r\n                width={  matchesHeight ? '96vw' : (matchesWidth ? '96vw' :  '70vw') }\r\n                border='bold'\r\n                controls\r\n                muted\r\n                playing={isPlaying}\r\n                url={url}\r\n                ref={playerRef}\r\n                progressInterval={1000}\r\n                onReady={setupVideo}\r\n                onStart={() => changeVideoStatus(roomName, user, 'playing')}\r\n                onPlay={() => changeVideoStatus(roomName, user, 'playing')}\r\n                onPause={() => changeVideoStatus(roomName, user, 'paused')}\r\n                onProgress={(data) => changeVideoPosition(roomName, user, data.playedSeconds)}\r\n                onSeek={(data) => changeVideoPosition(roomName, user, data.playedSeconds) }\r\n                onEnded={() => eventState.set(\"VideoEnded\")}\r\n                onError={() => eventState.set(\"VideoError\")}\r\n            />\r\n            <div className='video-outline' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n\r\n\r\n","import { userState } from \"../../App\"\r\n/* \r\nHier werden die API-Calls definiert um die Nutzung zu vereinfachen.\r\nAußerdem wird der userState von create und delete gemanaged.\r\n*/\r\nexport const createUser = async (_name) => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/users/',\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    name: _name\r\n                })\r\n            }\r\n        )\r\n        let json = await res.json()\r\n        if (userState.get() !== false) deleteUser(userState.get());\r\n        userState.set(json.id);\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getUsers = async () => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/users/',\r\n            {\r\n                method: \"GET\",\r\n            })\r\n        return await res.json();\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const deleteUser = (userId) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/users/' + userId,\r\n            {\r\n                method: \"DELETE\"\r\n            })\r\n        userState.set(false);\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React from 'react'\r\nimport \"./styles/Footer.css\"\r\n\r\n// Ein einfacher Footer mit den geforderten Informationen.\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer-container'>\r\n            <p className='footer-p'>Erstellt von:              Jannis Salzmann & Viktor Graf von Westarp</p>\r\n            <p className='footer-p'>Unter Aufsicht von:  Toni Barth</p>\r\n            <p className='footer-p footer-right'>Als Projekt:               \"Watch2gether\" der HS Anhalt</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","/* \r\nHier werden die API-Calls definiert um die Nutzung zu vereinfachen.\r\nDa stehts alle Chatnachrichten angezeigt werden, ist getChat vereinfacht.\r\n*/\r\nexport const sendMessage = async (roomName, id, message) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+ '/chat',\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user\": id,\r\n                    \"message\": message\r\n                })\r\n            }\r\n        )\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getChat = async (roomName) => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/'+roomName+ '/chat',\r\n            {\r\n                method: \"GET\"\r\n            })\r\n        return await res.json();\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { eventState } from \"./EventHandler\";\r\nimport \"./styles/ChatMessage.css\";\r\n/* \r\nHier werden die Nachrichten aus API sinnvoll dargestellt.\r\nDie Zeit ist auf die Stunden und Minuten gekürzt.\r\n(Die Zeitzone definiert Herr Barths Server, welche 3 Stunden nachgeht.)\r\nDa Räume als flüchtig konzipiert sind, entfällt das Datum.\r\nDurch den accessibility Span liest der Screenreader neue Nachrichten vor.\r\n */\r\nconst ChatMessage = React.forwardRef((props,ref) => {\r\n    const [text] = useState(props.text);\r\n    const propTime = props.time\r\n    const [time, setTime] = useState();\r\n    const [name] = useState(props.name);\r\n\r\n    useEffect(() => {\r\n        if (time !== undefined) return;\r\n        eventState.set(\"NewMessage\");\r\n        const date = new Date(null);\r\n        date.setMilliseconds(propTime);\r\n        setTime(date.toISOString().substring(11, 16));\r\n    });\r\n\r\n    return (\r\n        <div className=\"messages\" role=\"listitem\" ref={ref}>\r\n            <span className=\"messageTime\">{time}</span>\r\n            <span className=\"messageUser\">{name}:</span>\r\n            <span className=\"messageText\">{text}</span>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ChatMessage;","import React, { useState } from \"react\";\r\nimport { userState } from \"../App\";\r\nimport { roomState } from \"../Room\";\r\nimport { sendMessage } from \"./API/ChatAPI\";\r\nimport \"./styles/ChatInput.css\"\r\n\r\n// Hiermit können Nachrichten in den Chat gesendet werden.\r\n\r\nconst ChatInput = () => {\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const roomName = roomState.get();\r\n    const user = userState.get();\r\n    \r\n    const handleInputChange = (event) => { setNewMessage(event.target.value); };\r\n    const submitInput = async (event) => {\r\n        event.preventDefault();\r\n        await sendMessage(roomName, user, newMessage);\r\n        setNewMessage(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"chat-form\" onSubmit={submitInput}>\r\n            <label className=\"chat-input-label\" htmlFor=\"chatMessage\">\r\n                Nachricht eingeben\r\n            </label>\r\n            <input\r\n                name=\"chatMessage\"\r\n                type=\"text\"\r\n                id=\"chatMessage\"\r\n                value={newMessage}\r\n                placeholder=\"Neue Nachricht\"\r\n                maxLength=\"500\"\r\n                autoComplete=\"off\"\r\n                minLength=\"1\"\r\n                onChange={handleInputChange}/>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default ChatInput;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { roomState } from \"../Room\";\r\nimport { getChat } from \"./API/ChatAPI\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport \"./styles/Chat.css\";\r\nimport { getUsers } from \"./API/UserAPI\";\r\n\r\n/* Dieses Element umfasst den Chat, als auch die Eingabefläche.\r\nDie API wird regelmäßig auf neue Nachrichten angefragt.\r\nBeim ersten Laden und bei neuen Nachrichten wird nach unten gescrollt.\r\nFalls eine Nachricht keinem Nutzer zugewiesen werden kann(meist: Nutzer wurde gelöscht)\r\nso wird dies angezeigt. \r\n*/ \r\n\r\nconst Chat = () => {\r\n    const roomName = roomState.get();\r\n    const [displayed, setDisplayed] = useState([]);\r\n    const endRef = useRef();\r\n    const [lastCount, setLastCount] = useState(0);\r\n\r\n    const scrollToBottom = () => endRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n    useEffect(() => {\r\n        if (lastCount < displayed.length) {\r\n            setLastCount(displayed.length);\r\n            scrollToBottom();\r\n        }\r\n        const interval = setInterval(async () => { await shownMessages();}, 1000);\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    const shownMessages = async () => {\r\n        const data = await getChat(roomName);\r\n        const messages = data.messages;\r\n        if (messages === undefined) return;\r\n        const data2 = await getUsers();\r\n        const list = data2.users;\r\n        messages.forEach((message)=>{\r\n            const user = list.find((element) => { return message.userId === element.id; })\r\n            const name = user ? user.name : \"[gelöscht]\"\r\n            message.user = name;\r\n        })\r\n        setDisplayed(messages);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2 className='chat-header'>Chat</h2>\r\n            <div className='chat-list' role=\"list\" aria-label=\"Chat\" aria-live=\"polite\" onFocus={scrollToBottom}>\r\n                {displayed.map((m) => <ChatMessage key={m.id} time={m.time} text={m.text} name={m.user}/> )}\r\n            </div>\r\n            <div className=\"chat-input\"> <ChatInput /> </div>\r\n            <div ref={endRef}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;","import React, { useState, useEffect } from 'react';\r\nimport './styles/UserList.css';\r\nimport { getRoomUsers } from './API/RoomAPI';\r\nimport { roomState } from '../Room';\r\nimport { eventState } from './EventHandler';\r\n/* \r\nJedes Element soll nur den Namen zeigen. \r\nDer accessibility span dient der Barrierefreiheit. \r\nEr wird von ScreenReader als Benachrichtigung gelesen.\r\n */\r\nconst UserListElement = (props) => {\r\n    const [name] = useState(props.name);\r\n    return (\r\n        <div className='user-element' role=\"listitem\">\r\n            {name}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Die UserList zeigt alle im Raum befindlichen Nutzer an.\r\n\r\nconst UserList = () => {\r\n    const roomName = roomState.get();\r\n    const [displayed, setDisplayed] = useState([]);\r\n    const [lastCount, setLastCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (lastCount < displayed.length)\r\n            eventState.set(\"UserJoin\");\r\n        else if (lastCount > displayed.length)\r\n            eventState.set(\"UserLeave\");\r\n        setLastCount(displayed.length);\r\n        \r\n        const interval = setInterval(async () => { await shownUsers(); }, 1000);\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    const shownUsers = async () => {\r\n        const data = await getRoomUsers(roomName);\r\n        const users = data.users;\r\n        if (users === undefined) return;\r\n        setDisplayed(users);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-user-list\">\r\n            <h2 className='user-list-header'>Users</h2>\r\n            <div className='user-list' role=\"list\" aria-label=\"User\" >\r\n                {displayed.map(user => (<UserListElement name={user.name} key={user.id} />))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React, { useState } from \"react\";\r\nimport { userState } from \"../App\";\r\nimport { roomState } from \"../Room\";\r\nimport { changeVideoUrl } from './API/VideoAPI';\r\nimport \"./styles/VideoInput.css\";\r\n\r\n// Über den Video-Input, kann der Nutzer ein Video-Link mit dem Raum teilen\r\n\r\nconst VideoInput = () => {\r\n    const roomName = roomState.get();\r\n    const user = userState.get();\r\n    const [input, setInput] = useState(\"\");\r\n    const handleInputChange = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const urlInput = (event) => {\r\n        event.preventDefault();\r\n        changeVideoUrl(roomName, user, input);\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-input\">\r\n            <form className=\"video-input-form\" onSubmit={urlInput}>\r\n                <label htmlFor=\"Url\" className=\"video-input-label\">\r\n                    Video URL eingeben\r\n                </label>\r\n                <input\r\n                    type='text'\r\n                    name=\"Url\"\r\n                    id=\"Url\"\r\n                    className=\"video-input-url\"\r\n                    placeholder=\"z.B: https://youtu.be/dQw4w9WgXcQ\"\r\n                    value={input}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input type=\"submit\" className=\"video-input-submit\" value=\"Teilen\" />\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default VideoInput;","import React from 'react';\r\nimport \"./styles/Help.css\";\r\nimport { hookstate, useHookstate } from '@hookstate/core';\r\nimport ReactModal from 'react-modal';\r\n\r\n// In diesem Popup wird die Nutzung der Seite erklärt.\r\n\r\nexport const popupHelpStatus = hookstate(false);\r\n\r\nconst Help = () => {\r\n    const status = useHookstate(popupHelpStatus);\r\n\r\n    const toggle = () => { status.set(!status); };\r\n\r\n    return (\r\n        <ReactModal\r\n            overlayClassName=\"overlay\"\r\n            className=\"modal-help-content\"\r\n            isOpen={status.get()}\r\n            onRequestClose={toggle}\r\n            shouldFocusAfterRender={true}\r\n            shouldCloseOnOverlayClick={true}\r\n            shouldCloseOnEsc={true}\r\n            shouldReturnFocusAfterClose={true}\r\n            preventScroll={true}\r\n            contentLabel={\"Popup für Hilfe\"}\r\n        >\r\n            <h2>Erklärung der einzelnen Funktionen</h2>\r\n            <div className=\"help-element\" >\r\n                <h3>Einen Raum erstellen</h3>\r\n                <p>\r\n                    Wählen Sie den \"Einen Raum erstellen\" Button in der Mitte der Seite an. \r\n                    Sollten Sie noch keinen Nutzernamen haben, werden Sie nun aufgefordert einen Benutzernamen einzugeben. \r\n                    Wenn Sie diesen bestätigen, wird Ihr Raum erstellt und Sie werden direkt zu Ihrem Raum weitergeleitet.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Einem Raum beitreten</h3>\r\n                <p>Sie können Räume über die Raumliste, oder einen Einlade-Link betreten</p>\r\n                <h4>Die Raum-Liste</h4>\r\n                <p>\r\n                    Die Raumliste finden Sie auf der Hauptseite im unteren Drittel. Hier werden alle derzeit geöffneten Räume gelistet. \r\n                    Sie können direkt einsehen, wie viele Leute in diesem sind. Wählen Sie einen Raum an, um ihm beizutreten. \r\n                    Sollten Sie noch keinen Nutzernamen haben, werden Sie nun aufgefordert einen Benutzernamen einzugeben.\r\n                </p>\r\n                <h4>Der Einladelink</h4>\r\n                <p>\r\n                    Einladelinks sind Links, die in den einzelnen Räumen erstellt und weitergegeben werden können. \r\n                    Beim Ausführen des Links werden Sie direkt zum Beitritt des dazugehörigen Raums geleitet.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Der Benutzername</h3>\r\n                <p>\r\n                    Der Benutzername identifiziert Sie in den einzelnen Räumen, daher ist er Voraussetzung um einen Raum zu erstellen oder beizutreten. \r\n                    Wenn sie einem Raum beigetreten sind, wird Ihr Nutzername in der User-Liste aufgeführt. \r\n                    Ihre Nachrichten im Chat werden ebenfalls ihrem Benutzernamen zugeordnet.\r\n                    Wenn sie die Seite verlassen, wird ihr Nutzername gelöscht.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Einen Einlade-Link erstellen</h3>\r\n                <p>\r\n                    Mit dem Einladelink können Ihre Freunde direkt Ihrem Raum beitreten. \r\n                    Sie können einen Einladelink durch Anwählen des Raum-Titels, in der Mitte des oberen Bereichs ihres Raums, erstellen.\r\n                    Der Link wird dann direkt in Ihre Zwischenablage kopiert und Sie können ihn bequem in jegliche Nachrichten kopieren.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Ein Video Posten</h3>\r\n                <p>\r\n                    Ein Video können Sie ganz bequem mit dem Raum teilen. \r\n                    Geben Sie den Link zu dem gewünschten Video einfach in das mit \"Video URL eingeben\" gekennzeichnete Eingabefeld ein.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Funktionen des Players</h3>\r\n                <p>\r\n                    Alle Videos übernehmen nicht nur die Funktionen der Plattform des Videos (YouTube, Vimeo, etc.), sondern der Fortschritt wird mit allen Nutzern des Raums geteilt.\r\n                    Sie können das Video pausieren, spulen oder wechseln. Jegliche Aktionen werden in Ihrem Raum und somit allen Nutzern des Raums synchronisiert.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Die User-Liste</h3>\r\n                <p>\r\n                    Die User-Liste ist eine Aufzählung aller Nutzer, die derzeit diesem Raum beigetreten sind.\r\n                </p>\r\n            </div>\r\n            <div className=\"help-element\" >\r\n                <h3>Der Chat</h3>\r\n                <p>\r\n                    Sie können den integrierten Chat nutzen, um mit allen beigetretenen Nutzern des Raums zu kommunizieren. \r\n                    Mit dem Raum geteilte Nachrichten werden in der Chat-Box angezeigt.\r\n                    Um selbst eine Nachricht mit dem Raum zu teilen, geben Sie einfach ihre gewünschte Nachricht in das mit \"Nachricht eingeben\" Eingabefeld ein.\r\n                    Falls der Author einer Nachricht nicht mehr angemeldet ist, wird dieser als \"[gelöscht]\" angezeigt.\r\n                    Nach dem Schließen eines Raumes wird der gesamte Chat-Verlauf gelöscht.\r\n                </p>\r\n            </div>\r\n            <button className=\"modal-btn\" onClick={toggle}>×</button>\r\n        </ReactModal>\r\n    );\r\n};\r\nexport default Help;","import React, { useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./components/styles/Room.css\";\r\nimport { userState } from \"./App\";\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport Video from \"./components/Video\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { leaveRoom } from \"./components/API/RoomAPI\";\r\nimport { deleteUser } from \"./components/API/UserAPI\";\r\nimport Footer from \"./components/Footer\";\r\nimport { hookstate, useHookstate } from '@hookstate/core';\r\nimport Chat from \"./components/Chat\";\r\nimport UserList from \"./components/UserList\";\r\nimport VideoInput from \"./components/VideoInput\";\r\nimport Help from \"./components/Help\";\r\nimport EventHandler from './components/EventHandler';\r\n\r\n/* \r\nDies ist die Raum-Seite. Hier kommt man nur als Nutzer rein.\r\nWenn man hier direkt hinnaviggiert, also ohne einen Raum beizutreten, \r\nwird man auf die Startseite zurückgeworfen.\r\nBeim Verlassen der Seite, wird der Raum verlassen und der Nutzer gelöscht.\r\n*/\r\n\r\nexport const roomState = hookstate(false);\r\n\r\nconst Room = () => {\r\n    const roomName = useHookstate(roomState);\r\n    const navigate = useNavigate();\r\n    const navigateToHome = useCallback(() => navigate(\"/\", { replace: true }), [navigate]);\r\n\r\n    useEffect(() => {\r\n        if (roomName.get() === false) {\r\n            navigateToHome();\r\n        }\r\n        const handleTabClose = event => {\r\n            event.preventDefault();\r\n            leaveRoom(roomName.get(), userState.get());\r\n            deleteUser(userState.get());\r\n            console.log(\"beforeunload\");\r\n            return (event.returnValue = 'Are you sure you want to exit?');\r\n        };\r\n        window.addEventListener('beforeunload', handleTabClose);\r\n\r\n        return () => window.removeEventListener('beforeunload', handleTabClose);\r\n    });\r\n\r\n    return (\r\n        <div className=\"Room\">\r\n            <HelmetProvider>\r\n                <Helmet>\r\n                    <title>{\"StreamWithMe - \" + roomName.get()}</title>\r\n                </Helmet>\r\n                <Navbar />\r\n                <div className=\"users\">     <UserList /> </div>\r\n                <div className=\"chat\">      <Chat /> </div>\r\n                <div className=\"videoInput\"><VideoInput /> </div>\r\n                <div className=\"video\">     <Video /> </div>\r\n                <Footer />\r\n                <EventHandler />\r\n                <Help />\r\n            </HelmetProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;","import { roomState } from \"../../Room\";\r\nimport { roomTitleState } from \"../Navbar\";\r\n/* \r\nHier werden die API-Calls definiert um die Nutzung zu vereinfachen.\r\nAußerdem managed leaveRoom auch den roomState.\r\n*/\r\nexport const createRoom = async () => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/',\r\n            {\r\n                method: \"POST\",\r\n            }\r\n        );\r\n        let json = await res.json();\r\n        return json.name;\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const joinRoom = async (roomName, id) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/rooms/' + roomName + '/users',\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user\": id\r\n                })\r\n            }\r\n        );\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const getRoomUsers = async (roomName) => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/' + roomName + '/users',\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        return await res.json();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const leaveRoom = async (roomName, id) => {\r\n    try {\r\n        fetch('https://gruppe10.toni-barth.com/rooms/' + roomName + '/users',\r\n            {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user\": id\r\n                })\r\n            }\r\n        );\r\n        roomTitleState.set(false);\r\n        roomState.set(false);\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getRooms = async () => {\r\n    try {\r\n        let res = await fetch('https://gruppe10.toni-barth.com/rooms/',\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        return await res.json();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./styles/navbar.css\";\r\nimport { hookstate, useHookstate } from '@hookstate/core';\r\nimport { leaveRoom } from './API/RoomAPI';\r\nimport { userState } from '../App';\r\nimport { getUsers } from './API/UserAPI';\r\nimport { popupHelpStatus } from './Help';\r\nimport { eventState } from './EventHandler';\r\n/* \r\nDie Navbar erlaubt die Navigation zur Startseite sowie die Hilfe.\r\nWenn ein Nutzer erstellt wurde, ändert sich der Titel zu StreamWith+Nutzername\r\nHier wird auch der Raumname gezeigt, wenn man einen betritt.\r\nZuletzt kann man den Raumnamen clicken um einen Link zu diesem zu erhalten.\r\nÜber den Hookstate lässt sich der Raumname von anderen Elementen ändern.\r\n */\r\nexport const roomTitleState = hookstate(\"\");\r\n\r\nconst Navbar = () => {\r\n    useHookstate(roomTitleState);\r\n    const room = roomTitleState.get();\r\n    const [title, setTitle] = useState(\"Me\");\r\n    const [roomTitle] = useState(room);\r\n\r\n    const navigate = useNavigate();\r\n    const navigateToHome = useCallback(() => navigate(\"/\", { replace: true }), [navigate]);\r\n\r\n    useEffect(() => { checkTitle(); });\r\n\r\n    const checkTitle = async () => {\r\n        if (userState.get()) {\r\n            const data = await getUsers();\r\n            const users = data.users;\r\n            if (users === undefined) {\r\n                setTitle(\"Me\");\r\n            } else {\r\n                const u = users.find((u) => userState.get() === u.id);\r\n                setTitle(u.name);\r\n            }\r\n        }\r\n        else setTitle(\"Me\");\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.target.id === \"home\" && e.key === \"Enter\") handleNavigate();\r\n        if (e.target.id === \"help\" && e.key === \"Enter\") toggleHelp();\r\n    };\r\n    const handleNavigate = () => {\r\n        if (room !== false) {\r\n            roomTitleState.set(false);\r\n            leaveRoom(room, userState.get());\r\n        }\r\n        navigateToHome();\r\n    };\r\n\r\n    const toggleHelp = () => { popupHelpStatus.set(true); };\r\n\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(\"https://cibrock.github.io/watch2gather/#/\" + room);\r\n        eventState.set(\"LinkCopied\");\r\n    };\r\n\r\n    return (\r\n        <div className='sum' role=\"navigation\">\r\n            <div className='logo home'>\r\n                <div tabIndex=\"0\" role=\"link\" id=\"home\" aria-label=\"HomeButton\" className=\"logo-link\" onClick={handleNavigate} onKeyDown={handleKeyDown} >\r\n                    <div className='logo-stream'>StreamWith</div>\r\n                    <div className='logo-title'>{title}</div>\r\n                </div>\r\n            </div>\r\n            <div className='logo title'>\r\n                <div className='logo-link' role=\"link\" aria-label=\"Raum-Link erstellen\" tabIndex={roomTitle ? \"0\" : \"-1\" } onClick={copyLink}>{roomTitle ? roomTitle+\" 🖫\" : null}</div>\r\n            </div>\r\n            <div className='logo help'>\r\n                <div className=\"logo-link\" role=\"link\" id=\"help\" aria-label=\"Hilfe öffnen\" tabIndex=\"0\" onClick={toggleHelp} onKeyDown={handleKeyDown}>Hilfe</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Navbar;\r\n","import \"./styles/InputUser.css\";\r\nimport React, { useState, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createUser } from \"./API/UserAPI\";\r\nimport { hookstate, useHookstate } from '@hookstate/core';\r\nimport { roomState } from \"../Room\";\r\nimport { createRoom, joinRoom } from \"./API/RoomAPI\";\r\nimport { userState } from \"../App\";\r\nimport ReactModal from 'react-modal';\r\nimport { roomTitleState } from \"./Navbar\";\r\n/* \r\nDieses Popup erlaubt die Erstellung eines Nutzers.\r\nEs erscheint, wenn ein Raum betreten oder erstellt wird.\r\nDurch die Nutzung des ReactModal-Moduls ist es Barrierefrei.\r\n */\r\nexport const popupInputState = hookstate(false);\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst InputUser = () => {\r\n    const navigate = useNavigate();\r\n    const navigateToRoom = useCallback(() => navigate(\"/Room\", { replace: true }), [navigate]);\r\n    const [name, setName] = useState(\"\");\r\n    const status = useHookstate(popupInputState);\r\n\r\n    const handleInputChange = (event) => { setName(event.target.value); };\r\n    const toggle = () => { status.set(!status.get()) }\r\n\r\n    const submitInput = async (event) => {\r\n        event.preventDefault();\r\n        // if(name.length < 3) return;\r\n        await createUser(name);\r\n        if (roomState.get() === false) {\r\n            const roomName = await createRoom();\r\n            roomState.set(roomName);\r\n            roomTitleState.set(roomName);\r\n        }\r\n        joinRoom(roomState.get(),userState.get())\r\n        navigateToRoom();\r\n        toggle();\r\n        setName(\"\");\r\n    };\r\n    return (\r\n        <ReactModal \r\n            overlayClassName = \"overlay\"\r\n            className = \"modal-content\"\r\n            isOpen={status.get()}\r\n            onRequestClose={toggle}\r\n            shouldFocusAfterRender = {true}\r\n            shouldCloseOnOverlayClick = {true} \r\n            shouldCloseOnEsc = {true}\r\n            shouldReturnFocusAfterClose = {true}\r\n            preventScroll = {true}\r\n            contentLabel={\"Popup für Nutzernameneingabe geöffnet\"}\r\n            >\r\n            <h2 className=\"modal-h2\">Bitte erstellen Sie einen Nutzer um Räumen beitreten zu können</h2>\r\n            <form onSubmit={submitInput} className=\"input-user-grid\">\r\n                <label htmlFor=\"UserName\" className=\"input-user-label\">\r\n                    Name eingeben\r\n                </label>\r\n                <input\r\n                    className=\"input-user-input\"\r\n                    name=\"UserName\"\r\n                    type=\"name\"\r\n                    id=\"UserName\"\r\n                    value={name}\r\n                    placeholder=\"Name\"\r\n                    maxLength = \"20\"\r\n                    minLength=\"3\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange} />\r\n                <input className=\"input-user-submit\" type=\"submit\" value=\"Bestätigen\"/>\r\n            </form>\r\n            <button className = \"modal-btn \" onClick={toggle}>×</button>\r\n        </ReactModal>\r\n    );\r\n};\r\nexport default InputUser;","import React, { useCallback } from 'react';\r\nimport \"./styles/CreateRoom.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createRoom, joinRoom } from './API/RoomAPI';\r\nimport { roomState } from '../Room';\r\nimport { userState } from '../App';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { popupInputState } from './InputUser';\r\nimport { roomTitleState } from './Navbar';\r\n\r\n// Hiermit kann ein Nutzer einen neuen Raum anlegen und beitreten\r\n\r\nconst CreateRoom = () => {\r\n    const navigate = useNavigate();\r\n    const navigateToRoom = useCallback(() => navigate(\"/Room\", { replace: true }), [navigate]);\r\n    const instantiateRoom = async () => {\r\n        if (userState.get() === false) {\r\n            popupInputState.set(true);\r\n            console.log(\"Blocked create room, user is not set\");\r\n        } else {\r\n            const roomName = await createRoom();\r\n            roomState.set(roomName);\r\n            roomTitleState.set(roomName);\r\n            joinRoom(roomName, userState.get());\r\n            navigateToRoom();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-create-room\">\r\n            <div>\r\n                <h2 className=\"accessibility\">Einen Raum erstellen</h2>\r\n                <h2 role=\"none\">enjoy with me.</h2>\r\n            </div>\r\n            <button type=\"button\" onClick={instantiateRoom} id=\"roombutton\">\r\n                Einen Raum Erstellen\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default CreateRoom;","import React from 'react';\r\nimport './styles/Backgroundvideo.css';\r\nimport video from './Assets/bgvid.860475ab.mp4';\r\n\r\n// Lediglich ein Hintergrundvideo. \r\n// Da es sich um eine Streaming-Seite handelt, wird dieses Element auch \r\n// bei mobilen Nutzern angezeigt.\r\n\r\nconst Backgroundvideo = () => {\r\n    return (\r\n        <video id=\"background-video\" autoPlay loop>\r\n            <source src={video} type=\"video/mp4\"/>\r\n        </video>\r\n    )\r\n}\r\n\r\nexport default Backgroundvideo","import React, { useCallback, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./styles/RoomListElement.css\";\r\nimport { roomState } from '../Room';\r\nimport { userState } from '../App';\r\nimport { popupInputState } from './InputUser';\r\nimport { roomTitleState } from './Navbar';\r\nimport { getRoomUsers, joinRoom } from './API/RoomAPI';\r\nimport { useEffect } from 'react';\r\n/* \r\nEin RoomListElement zeigt die Präsenz eines Raumes und wie viele Nutzer in diesem sind.\r\nMittels des Clicks oder Enter kann der Raum betreten werden.\r\nFalls man noch kein User ist, erscheint ein Popup zur Erstellung.\r\n */\r\nconst RoomListElement = (props) => {\r\n    const [roomName] = useState(props.name);\r\n    const [viewers,setViewers] = useState();\r\n    const navigate = useNavigate();\r\n    const navigateToRoom = useCallback(() => navigate(\"/Room\", { replace: true }), [navigate]);\r\n    \r\n    useEffect(()=>{ getViewers(); });\r\n    const getViewers = async () => {\r\n        const data = await getRoomUsers(roomName);\r\n        const users = data.users;\r\n        setViewers( users.length + (users.length === 1 ? \" streamt\" : \" streamen\"));\r\n    }\r\n\r\n    const handleKeyDown = (e) => { if (e.key === \"Enter\") enterRoom(); }\r\n    const enterRoom = async () => {\r\n        roomState.set(roomName);\r\n        roomTitleState.set(roomName);\r\n        if (userState.get() === false) {\r\n            popupInputState.set(true);\r\n            console.log(\"Blocked join room, user is not set\");\r\n        } else {\r\n            joinRoom(roomName, userState.get());                \r\n            navigateToRoom();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div tabIndex=\"0\" className='room-element' onClick={enterRoom} onKeyDown={handleKeyDown}>\r\n            <span className='room-element-info accessibility'>Raum</span>\r\n            <span className='room-element-name'>{roomName}</span>\r\n            <span className='room-element-info'>{viewers}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomListElement;","import React, { useEffect, useState } from 'react';\r\nimport RoomListElement from \"./RoomListElement\";\r\nimport './styles/RoomList.css';\r\nimport { getRooms} from './API/RoomAPI';\r\n/* \r\nDie RoomList zeigt alle offenen Räume an.\r\nSie aktuallisiert sich jede Sekunde.\r\n */\r\nconst RoomList = () => {\r\n    const [displayed, setDisplayed] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const interval = setInterval(async () => { await shownRooms(); }, 1000);\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    const shownRooms = async () => {\r\n        const data = await getRooms();\r\n        const rooms = data.rooms;\r\n        if (rooms === undefined) return;\r\n        setDisplayed(rooms);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-rooms\">\r\n            <h2 className='room-header'>Einem Raum beitreten</h2>\r\n            <div className='room-list' aria-label=\"Räume\">\r\n                {displayed.map(e => (<RoomListElement name={e.name} key={e.name}/>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomList;","import React, { useCallback, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './components/styles/App.css';\r\nimport Navbar, { roomTitleState } from './components/Navbar';\r\nimport CreateRoom from './components/CreateRoom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { deleteUser } from './components/API/UserAPI';\r\nimport Footer from './components/Footer';\r\nimport InputUser, { popupInputState } from './components/InputUser.js';\r\nimport Backgroundvideo from './components/Backgroundvideo';\r\nimport RoomList from './components/RoomList';\r\nimport { getRooms, leaveRoom } from './components/API/RoomAPI';\r\nimport { roomState } from './Room';\r\nimport { hookstate, useHookstate } from '@hookstate/core';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Help from './components/Help';\r\n\r\n/* \r\nDie App ist gleich der Startseite und enthällt alle Unterkomponenten.\r\nNach betreten der Seite, wird geprüft ob der genutzte Link einem Raum angehört.\r\n    Wenn ja, wird dieser nach der Nutzererstellung betreten.\r\n    Wenn nicht, wird die Fehlerseite geladen.\r\nWenn der Nutzer die Seite verlässt, muss der Nutzer zuerst gelöscht werden.\r\n*/\r\n\r\nexport const userState = hookstate(false)\r\n\r\nconst App = () => {\r\n    const user = useHookstate(userState);\r\n    \r\n    const location = useLocation();\r\n    const path = location.pathname.substring(1)\r\n    const navigate = useNavigate();\r\n    const navigateToNotFound = useCallback(() => navigate(\"/NotFound\", { replace: true }), [navigate]);\r\n\r\n    useEffect(() => {\r\n        checkRoom();\r\n        const handleTabClose = event => {\r\n            if (user.get()) {\r\n                event.preventDefault();\r\n                if (roomState.get() !== false) leaveRoom(roomState.get(), user.get()); //Artefakt, sollte niemals möglich sein\r\n                console.log('beforeunload event triggered: delete '+user.get());\r\n                deleteUser(user.get());\r\n                return (event.returnValue = 'Are you sure you want to exit?');\r\n            }\r\n        };\r\n\r\n        window.addEventListener('beforeunload', handleTabClose);\r\n\r\n        return () => window.removeEventListener('beforeunload', handleTabClose);\r\n    }, []);\r\n\r\n    const checkRoom = async () => {\r\n        const data = await getRooms();\r\n        const rooms = data.rooms;\r\n        if (rooms === undefined) return;\r\n        if (path === \"\") return;\r\n        console.log(path);\r\n        const target = rooms.find((room)=>{return room.name===path});\r\n        if (target===undefined) return navigateToNotFound();\r\n        roomState.set(path);\r\n        roomTitleState.set(path);\r\n        popupInputState.set(true);\r\n        console.log(\"Blocked join room, user is not set\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Helmet>\r\n                <title>StreamWithMe</title>\r\n            </Helmet>\r\n            <Navbar />\r\n            <InputUser />\r\n            <CreateRoom />\r\n            <RoomList />\r\n            <Footer />\r\n            <Backgroundvideo />\r\n            <Help/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React, { useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from \"react-helmet\";\r\nimport Footer from \"./components/Footer\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport \"./components/styles/NotFound.css\";\r\nimport Help from \"./components/Help\";\r\n\r\nconst NotFound = () => {\r\n    const TITLE = \"StreamWithMe - Room not found\";\r\n\r\n    const navigate = useNavigate();\r\n    const navigateToHome = useCallback(() => navigate(\"/\", { replace: true }), [navigate]);\r\n    return (\r\n        <div className=\"App\">\r\n            <Helmet>\r\n                <title>{TITLE}</title>\r\n            </Helmet>\r\n            <Navbar />\r\n            <div className=\"not-found-container\">\r\n                <div className=\"monkey\">🦧</div>\r\n                <div className=\"not-found-flex\">\r\n                    <h1 className=\"not-found-header\">Error: Page Not Found</h1>\r\n                    <h2>Dieser Raum existiert nicht.</h2>\r\n                    <p>Auf der Startseite können neue Räume erstellt werden und bestehnden Räumen beigetreten werden.</p>\r\n                    <button className=\"not-found-btn\" onClick={navigateToHome}> Zurück zur Startseite ➔</button>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            <Help />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport Room from './Room';\r\nimport {HashRouter as Router, Routes, Route} from 'react-router-dom'\r\nimport NotFound from './NotFound';\r\n/* \r\nHier wird nur der Router definiert. \r\nJeder unbekannte Pfad wird an die App geleitet und dort evvaluiert.\r\n*/\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n    <Router base=\"/\">\r\n    <Routes>\r\n        <Route path=\"/\" element={<App/>}/>\r\n        <Route path=\"/Room\" element={<Room/>}/>\r\n        <Route path=\"/NotFound\" element={<NotFound/>}/>\r\n        <Route path=\"*\" element={<App/>}/>\r\n    </Routes>\r\n</Router>\r\n);","module.exports = __webpack_public_path__ + \"static/media/bgvid.860475ab.860475ab.mp4\";"],"sourceRoot":""}